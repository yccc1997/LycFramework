(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{104:function(e,t,n){e.exports=n.p+"static/media/vuplex-logo.ed37dca9.png"},105:function(e,t,n){e.exports=n.p+"static/media/search.160b1499.svg"},108:function(e,t,n){e.exports=n.p+"static/media/asset-store-badge-android-and-ios.95f4c3c4.png"},109:function(e,t,n){e.exports=n.p+"static/media/asset-store-badge-android.cb06190c.png"},110:function(e,t,n){e.exports=n.p+"static/media/asset-store-badge-ios.920927d7.png"},111:function(e,t,n){e.exports=n.p+"static/media/asset-store-badge-windows-and-macos.49b32973.png"},112:function(e,t,n){e.exports=n.p+"static/media/webview-demo.a600f5cb.mp4"},114:function(e,t,n){e.exports=n.p+"static/media/glue.41f81294.png"},115:function(e,t,n){e.exports=n.p+"static/media/saxo.f6bb001a.png"},116:function(e,t,n){e.exports=n.p+"static/media/synergy.1c46b977.png"},117:function(e,t,n){e.exports=n.p+"static/media/uga.21fa60db.png"},118:function(e,t,n){e.exports=n.p+"static/media/viveport.1a29ac42.png"},119:function(e,t,n){e.exports=n.p+"static/media/bitcode.4f9abd57.jpg"},121:function(e,t,n){e.exports=n(554)},335:function(e,t,n){},337:function(e,t,n){},339:function(e,t,n){},343:function(e,t,n){},407:function(e,t,n){},409:function(e,t,n){},411:function(e,t,n){},539:function(e,t,n){},541:function(e,t,n){},543:function(e,t,n){},546:function(e,t,n){},550:function(e,t,n){},554:function(e,t,n){"use strict";n.r(t);var a=n(0),i=n.n(a),r=n(102),o=n(558),s=n(11),l=n(103),c=n.n(l),d=n(22),m=n.n(d),u=n(69),p=n.n(u),h=n(68),b=n.n(h),w=n(3),f=n(4),v=n(6),g=n(5),y=n(7),E=n(557),x=n(555),k=n(556),W=n(559),S={APP_STORE_URL:"https://itunes.apple.com/us/app/vr-browser/id1265684645?ls=1&mt=8",ASSET_STORE_URL:"https://developer.vuplex.com",EMAIL_ADDRESS:"nate@vuplex.com",FACEBOOK_URL:"https://www.facebook.com/vuplexbrowser/",GITHUB_URL:"https://github.com/vuplex",GOOGLE_PLAY_URL:"https://play.google.com/store/apps/details?id=design.sonic.vrdesktop&hl=en",OCULUS_URL:"https://www.oculus.com/experiences/go/1716339908435593/",TWITTER_URL:"https://twitter.com/vuplexbrowser"},I=n(104),V=n.n(I),C=n(105),A=n.n(C),T=(n(335),"https://support.vuplex.com/search"),O=function(e){function t(){var e,n;Object(w.a)(this,t);for(var a=arguments.length,i=new Array(a),r=0;r<a;r++)i[r]=arguments[r];return(n=Object(v.a)(this,(e=Object(g.a)(t)).call.apply(e,[this].concat(i)))).state={value:""},n._handleInputChange=function(e){return n.setState({value:e.target.value})},n._handleKeyDown=function(e){13===e.keyCode&&n._submitSearch()},n._submitSearch=function(){n.state.value.trim().length&&(location.href="".concat(T,"?q=").concat(encodeURIComponent(n.state.value.trim())))},n}return Object(y.a)(t,e),Object(f.a)(t,[{key:"render",value:function(){return i.a.createElement("div",{className:"search-input"},i.a.createElement("input",{type:"search",placeholder:"Search documentation",value:this.state.value,onChange:this._handleInputChange,onKeyDown:this._handleKeyDown}),i.a.createElement("button",{disabled:!this.state.value.trim().length,onClick:this._submitSearch},i.a.createElement("img",{src:A.a,alt:"search"})))}}]),t}(a.Component),U=(n(337),function(e){function t(){return Object(w.a)(this,t),Object(v.a)(this,Object(g.a)(t).apply(this,arguments))}return Object(y.a)(t,e),Object(f.a)(t,[{key:"render",value:function(){var e=this.props.site,t=["navbar"];return this.props.search&&t.push("search-enabled"),this.props.className&&t.push(this.props.className),i.a.createElement("nav",{className:t.join(" ")},i.a.createElement("div",{style:"main"===e?{justifyContent:"center"}:void 0},this._renderSide(),i.a.createElement("div",{className:"nav-center"},this._renderMainSiteLink(),"developers"!==e&&i.a.createElement("a",{href:"https://developer.vuplex.com"},"developers"),"blog"!==e&&i.a.createElement("a",{href:"https://blog.vuplex.com"},"blog"),this._renderContactLink(),i.a.createElement("div",{className:"social-links"},i.a.createElement(s.a,{className:"social-link",to:S.TWITTER_URL,eventLabel:"Twitter",target:"_blank"},i.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"512",height:"512",viewBox:"0 0 49.652 49.652"},i.a.createElement("path",{d:"M24.826 0C11.137 0 0 11.137 0 24.826c0 13.688 11.137 24.826 24.826 24.826 13.688 0 24.826-11.138 24.826-24.826C49.652 11.137 38.516 0 24.826 0zm11.075 19.144c.011.246.017.494.017.742 0 7.551-5.746 16.255-16.259 16.255-3.227 0-6.231-.943-8.759-2.565.447.053.902.08 1.363.08 2.678 0 5.141-.914 7.097-2.446a5.72 5.72 0 0 1-5.338-3.969 5.76 5.76 0 0 0 2.58-.096 5.715 5.715 0 0 1-4.583-5.603l.001-.072a5.69 5.69 0 0 0 2.587.714 5.71 5.71 0 0 1-2.541-4.755c0-1.048.281-2.03.773-2.874a16.225 16.225 0 0 0 11.777 5.972 5.707 5.707 0 0 1-.147-1.303 5.714 5.714 0 0 1 9.884-3.91 11.406 11.406 0 0 0 3.63-1.387 5.74 5.74 0 0 1-2.516 3.162 11.36 11.36 0 0 0 3.282-.899 11.494 11.494 0 0 1-2.848 2.954z",fill:"white"}))),i.a.createElement(s.a,{className:"social-link",to:S.FACEBOOK_URL,eventLabel:"Facebook",target:"_blank"},i.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 167.657 167.657",width:"512",height:"512"},i.a.createElement("path",{d:"M83.829.349C37.532.349 0 37.881 0 84.178c0 41.523 30.222 75.911 69.848 82.57v-65.081H49.626v-23.42h20.222V60.978c0-20.037 12.238-30.956 30.115-30.956 8.562 0 15.92.638 18.056.919v20.944l-12.399.006c-9.72 0-11.594 4.618-11.594 11.397v14.947h23.193l-3.025 23.42H94.026v65.653c41.476-5.048 73.631-40.312 73.631-83.154 0-46.273-37.532-83.805-83.828-83.805z",fill:"white"}))),i.a.createElement(s.a,{className:"social-link",to:S.GITHUB_URL,eventLabel:"GitHub",target:"_blank"},i.a.createElement("svg",{viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},i.a.createElement("path",{d:"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12",fill:"white"}))))),this._renderRightSide()))}},{key:"_renderContactLink",value:function(){return"main"===this.props.site?i.a.createElement(x.a,{to:"/contact"},"contact"):i.a.createElement("a",{href:"https://vuplex.com/contact"},"contact")}},{key:"_renderMainSiteLink",value:function(){return"main"===this.props.site?i.a.createElement(x.a,{to:"/"},"home"):"support"!==this.props.site?i.a.createElement("a",{href:"https://vuplex.com"},"apps"):void 0}},{key:"_renderMenuIcon",value:function(){return this.props.mobileMenuButton.menuOpen?i.a.createElement("div",{className:"close"},"\xd7"):i.a.createElement("div",{className:"hamburger"},i.a.createElement("div",null),i.a.createElement("div",null),i.a.createElement("div",null))}},{key:"_renderMobileMenuButton",value:function(){if(this.props.mobileMenuButton)return i.a.createElement("div",{className:"menu-button",role:"button",tabIndex:0,onClick:this.props.mobileMenuButton.onClick},this._renderMenuIcon())}},{key:"_renderRightSide",value:function(){return this.props.search?i.a.createElement(O,null):this._renderSide("nav-right-default")}},{key:"_renderSide",value:function(e){if("main"!==this.props.site)return i.a.createElement("div",{className:"nav-side ".concat(e||"")},this._renderMobileMenuButton(),i.a.createElement("a",{className:"nav-logo",href:"https://vuplex.com"},i.a.createElement("img",{src:V.a,alt:"Vuplex logo"})),i.a.createElement("div",{className:"nav-slash"}),i.a.createElement("a",{className:"nav-header",href:"/"},this.props.site))}}]),t}(a.Component)),D=(n(339),function(e){function t(){return Object(w.a)(this,t),Object(v.a)(this,Object(g.a)(t).apply(this,arguments))}return Object(y.a)(t,e),Object(f.a)(t,[{key:"render",value:function(){var e=["sidebar"];return this.props.mobileSidebarOpen&&e.push("mobile-open-container"),this.props.mobileOnly&&e.push("mobile-only-sidebar"),i.a.createElement("div",{className:e.join(" ")},i.a.createElement("aside",{className:"".concat(this.props.mobileSidebarOpen?"mobile-open":"desktop-sidebar")},this.props.children),this.props.mobileSidebarOpen&&i.a.createElement("div",{className:"mobile-sidebar-backdrop",onClick:this.props.onMobileBackdropClick}))}}]),t}(a.Component)),P={productUrls:{ANDROID:"https://assetstore.unity.com/packages/tools/gui/3d-webview-for-android-137030",ANDROID_AND_IOS:"https://assetstore.unity.com/packages/tools/gui/3d-webview-for-android-and-ios-135383",ANDROID_GECKO:"https://assetstore.unity.com/packages/tools/gui/3d-webview-for-android-with-gecko-engine-158778",IOS:"https://assetstore.unity.com/packages/tools/gui/3d-webview-for-ios-137040",WINDOWS_AND_MAC:"https://assetstore.unity.com/packages/tools/gui/3d-webview-for-windows-and-macos-154144",UWP:"https://assetstore.unity.com/packages/slug/166365"}},R={name:"SetAudioAndVideoCaptureEnabled",static:!0,returns:"void",type:"method",arguments:[{type:"bool",name:"enabled"}],description:"\nBy default, web pages cannot access the device's camera or microphone via JavaScript, even if the user has granted the app permission to use them. Invoking `SetAudioAndVideoCaptureEnabled(true)` allows **all web pages** to access the camera and microphone if the user has granted the app permission to use them via the [standard Android permission dialogs](https://developer.android.com/training/permissions/requesting).\n\nThis is useful, for example, to enable WebRTC support. The following Android permissions must be included in the app's [AndroidManifest.xml](https://docs.unity3d.com/Manual/android-manifest.html) and also requested by the application at runtime:\n- [`android.permission.RECORD_AUDIO`](https://developer.android.com/reference/android/Manifest.permission#RECORD_AUDIO)\n- [`android.permission.CAMERA`](https://developer.android.com/reference/android/Manifest.permission#CAMERA)\n"},L={name:"MovePointer",returns:"void",type:"method",arguments:[{type:"Vector2",name:"point"}],description:"\nMoves the pointer to the given point in the webpage. This can be used, for example, to trigger hover effects in the webpage.\n\nThe x and y components of the `point` param are values between 0 and 1 that are normalized to the width and height, respectively. For example, `point.x = x in Unity units / width in Unity units`. Like in the browser, the origin is in the upper-left corner, the positive direction of the y-axis is down, and the positive direction of the x-axis is right.\n"},_={name:"PointerDown",returns:"void",type:"method",arguments:[{type:"Vector2",name:"point"}],description:"\nDispatches a mouse down click event. This can be used, for example, to implement drag-and-drop.\n\nThe x and y components of the `point` param are values between 0 and 1 that are normalized to the width and height, respectively. For example, `point.x = x in Unity units / width in Unity units`. Like in the browser, the origin is in the upper-left corner, the positive direction of the y-axis is down, and the positive direction of the x-axis is right.\n"},N={name:"PointerUp",returns:"void",type:"method",arguments:[{type:"Vector2",name:"point"}],description:"\nDispatches a mouse up click event. This can be used, for example, to implement drag-and-drop.\n\nThe x and y components of the `point` param are values between 0 and 1 that are normalized to the width and height, respectively. For example, `point.x = x in Unity units / width in Unity units`. Like in the browser, the origin is in the upper-left corner, the positive direction of the y-axis is down, and the positive direction of the x-axis is right.\n"},M={name:"AndroidWebView",type:"class",description:"\nThe `IWebView` implementation used by [3D WebView for Android](".concat(P.productUrls.ANDROID,"). This class also includes extra methods for Android-specific functionality, which your application can call by using the approaches described in [this support article](https://support.vuplex.com/articles/how-to-call-platform-specific-apis#android).\n"),inheritsFrom:["MonoBehaviour","IWebView"],sidebarSection:"platform",members:[{name:"ConsoleMessageLogged",returns:"EventHandler<ConsoleMessageEventArgs>",type:"event",description:"Indicates that a message was logged to the JavaScript console."},{name:"ScriptAlert",returns:"EventHandler<ScriptAlertEventArgs>",type:"event",description:"Indicates that a script in the page called the [`window.alert()`](https://developer.mozilla.org/en-US/docs/Web/API/Window/alert) JavaScript API."},{name:"ClearHistory",returns:"void",type:"method",description:"Clears the webview's back / forward navigation history."},{name:"IsWebViewAvailable",static:!0,returns:"bool",type:"method",description:"\nIndicates whether the Android WebView package is installed on the system and available.\n\n3D WebView internally depends on Android's WebView package, which is normally installed as part of the operating system. In rare circumstances, the Android WebView package may be unavailable. For example, this can happen if the user used developer tools to delete the WebView package or if [updates to the WebView package are currently being installed](https://bugs.chromium.org/p/chromium/issues/detail?id=506369)."},{name:"LoadHtml",returns:"void",type:"method",arguments:[{type:"string",name:"html"},{type:"string",name:"baseUrl"}],description:"Like `LoadHtml(string html)`, but also allows a virtual base URL to be specified."},L,{name:"Pause",returns:"void",type:"method",description:"Pauses processing, media, and rendering for this webview instance until `Resume()` is called."},{name:"PauseAll",static:!0,returns:"void",type:"method",description:"Pauses processing, media, and rendering for all webview instances. This method is automatically called by the plugin when the application is paused."},_,N,{name:"PostUrl",returns:"void",type:"method",arguments:[{type:"string",name:"url"},{type:"byte[]",name:"data"}],description:'\nLoads the given URL using an HTTP POST request and the given application/x-www-form-urlencoded data.\n\nExample:\n```\nwebView.PostUrl("https://postman-echo.com/post", Encoding.Unicode.GetBytes("foo=bar"));\n```\n'},{name:"Resume",returns:"void",type:"method",description:"Resumes processing and rendering for all webview instances after a previous call to `Pause().`"},{name:"ResumeAll",static:!0,returns:"void",type:"method",description:"Resumes processing and rendering for all webview instances after a previous call to `PauseAll().` This method is automatically called by the plugin when the application resumes after being paused."},R,{name:"SetCustomUriSchemesEnabled",returns:"void",type:"method",static:!0,arguments:[{type:"bool",name:"enabled"}],description:"By default, `AndroidWebView` allows requests for custom schemes (ex: myapp://myaction?data=foo). However, if you want to override this behavior, you can disable custom URI schemes with this method."},{name:"SetGeolocationPermissionEnabled",returns:"void",type:"method",static:!0,arguments:[{type:"bool",name:"enabled"}],description:"\nBy default, web pages cannot access the device's geolocation via JavaScript, even if the user has granted the app permission to access location. Invoking `SetGeolocationPermissionEnabled(true)` allows **all web pages** to access the geolocation if the user has granted the app location permissions via the [standard Android permission dialogs](https://developer.android.com/training/permissions/requesting).\n\nThe following Android permissions must be included in the app's [AndroidManifest.xml](https://docs.unity3d.com/Manual/android-manifest.html) and also requested by the application at runtime:\n- [`android.permission.ACCESS_COARSE_LOCATION`](https://developer.android.com/reference/android/Manifest.permission#ACCESS_COARSE_LOCATION)\n- [`android.permission.ACCESS_FINE_LOCATION`](https://developer.android.com/reference/android/Manifest.permission#ACCESS_FINE_LOCATION)\n"},{name:"SetIgnoreSslErrors",returns:"void",type:"method",arguments:[{type:"bool",name:"ignore"}],description:"By default, `AndroidWebView` blocks webpages with SSL errors, but you can call `SetIgnoreSslErrors(true)` to make it so that it ignores such errors."},{name:"SetInitialScale",returns:"void",type:"method",arguments:[{type:"float",name:"scale"}],description:"Sets the initial scale for web content, where 1.0 is the default scale."},{name:"SetMediaPlaybackRequiresUserGesture",returns:"void",type:"method",arguments:[{type:"bool",name:"mediaPlaybackRequiresUserGesture"}],description:"By default, AndroidWebView prevents JavaScript from auto-playing sound from most sites unless the user has first interacted with the page. You can call this method to disable or re-enable enforcement of this auto-play policy."},{name:"SetNativeKeyboardEnabled",static:!0,returns:"void",type:"method",arguments:[{type:"bool",name:"enabled"}],description:"Enables or disables the native Android on-screen keyboard for new webviews (the default is disabled)."},{name:"SetNativeVideoRenderingEnabled",static:!0,returns:"void",type:"method",arguments:[{type:"bool",name:"enabled"}],description:"\nEnables or disables native video rendering on versions of Android that support native video rendering.\n\nThe default is enabled. If disabled, then the `AndroidWebView` plugin will use a fallback video implementation to support basic video playback. This method is automatically called when the Oculus VR SDK is enabled, because the Oculus Go and Quest headsets don't support native video rendering.\n"},{name:"SetUserAgent",returns:"void",type:"method",arguments:[{type:"bool",name:"mobile"}],description:"\nLike `Web.SetUserAgent(bool mobile)`, except it sets the user-agent for a single webview instance instead of setting it globally.\n\nIf you globally set a default user-agent using `Web.SetUserAgent()`, you can still use this method to override the user-agent for a single webview instance."},{name:"SetUserAgent",returns:"void",type:"method",arguments:[{type:"string",name:"userAgent"}],description:"\nLike `Web.SetUserAgent(string userAgent)`, except it sets the user-agent for a single webview instance instead of setting it globally.\n\nIf you globally set a default user-agent using `Web.SetUserAgent()`, you can still use this method to override the user-agent for a single webview instance."},{name:"ZoomBy",returns:"void",type:"method",arguments:[{type:"float",name:"zoomFactor"}],description:"Zooms in or out by the given factor, which is multiplied by the current zoom level to reach the new zoom level. `zoomFactor` must be in the range from 0.01 to 100.0. Note that the zoom level gets reset when a new page is loaded."}]},z={name:"AndroidGeckoWebView",type:"class",description:"The `IWebView` implementation used by [3D WebView for Android with Gecko Engine](".concat(P.productUrls.ANDROID_GECKO,"). This class also includes extra methods for Gecko-specific functionality, which your application can call by using the approaches described in [this support article](https://support.vuplex.com/articles/how-to-call-platform-specific-apis#android)."),inheritsFrom:["MonoBehaviour","IWebView"],sidebarSection:"platform",members:[{name:"EnableRemoteDebugging",returns:"void",type:"method",static:!0,description:"\nEnables remote debugging with FireFox's dev tools.\nNote that this method can only be called prior to\ncreating any webviews.\n\nIf remote debugging is enabled, you can connect your\ndevice to your dev computer and remotely debug webview\ninstances by navigating to about:debugging in FireFox\non the dev computer.\n      "},L,_,N,R,{name:"SetUserPreferences",static:!0,returns:"void",type:"method",arguments:[{type:"string",name:"preferencesJavaScript"}],description:"\nSets the JavaScript for the Gecko engine's optional [user.js preferences file](https://developer.mozilla.org/en-US/docs/Mozilla/Preferences/A_brief_guide_to_Mozilla_preferences), which can be used to optionally modify the browser engine's settings. Note that this method can only be called prior to creating any webviews.\n\nThe engine's current settings can be viewed by loading the url \"about:config\" in a webview. The available preferences aren't well-documented, but the following pages list some of them:\n- [libpref's StaticPrefList.yaml](https://dxr.mozilla.org/mozilla-central/source/modules/libpref/init/StaticPrefList.yaml)\n- [libpref's all.js](https://dxr.mozilla.org/mozilla-central/source/modules/libpref/init/all.js)\n\nExample:\n```cs\nAndroidGeckoWebView.SetUserPreferences(@\"\n    pref('security.fileuri.strict_origin_policy', false);\n    pref('formhelper.autozoom', false);\n\");\n```\n"}]},G="",j=null,F=null,H={};function B(){G="",null!==j&&j.disconnect(),null!==F&&(window.clearTimeout(F),F=null)}function J(){var e=document.getElementById(G);return null!==e&&(e.scrollIntoView(H),B(),!0)}function K(e){return H={behavior:e.behavior||"auto"},i.a.createElement(x.a,Object.assign({},e,{onClick:function(t){B(),e.onClick&&e.onClick(t),"string"===typeof e.to?G=e.to.split("#").slice(1).join("#"):"object"===typeof e.to&&"string"===typeof e.to.hash&&(G=e.to.hash.replace("#","")),""!==G&&window.setTimeout(function(){!1===J()&&(null===j&&(j=new MutationObserver(J)),j.observe(document,{attributes:!0,childList:!0,subtree:!0}),F=window.setTimeout(function(){B()},1e4))},0)}}),e.children)}var q=function(e){return i.a.createElement("div",null,i.a.createElement("p",null,"You can create a ",i.a.createElement("code",null,e.name)," one of the following ways:",i.a.createElement("ul",null,i.a.createElement("li",null,"By dragging ",e.name,'.prefab into a scene via the editor and setting its "Initial URL" property.'),i.a.createElement("li",null,"By instantiating an instance at runtime with ",i.a.createElement("a",{href:"#Instantiate"},i.a.createElement("code",null,e.name,".Instantiate()"))," and then waiting for its ",i.a.createElement("a",{href:"#Initialized"},i.a.createElement("code",null,"Initialized"))," event to be raised, after which you can call methods on its ",i.a.createElement("a",{href:"#WebView"},i.a.createElement("code",null,"WebView"))," property."))),i.a.createElement("p",null,i.a.createElement("code",null,e.name)," handles standard events from Unity's input system (like ",i.a.createElement("a",{href:"https://docs.unity3d.com/2018.1/Documentation/ScriptReference/EventSystems.IPointerDownHandler.html"},i.a.createElement("code",null,"IPointerDownHandler")),"), so it works with input modules that extend Unity's ",i.a.createElement("a",{href:"https://docs.unity3d.com/2018.3/Documentation/ScriptReference/EventSystems.BaseInputModule.html"},i.a.createElement("code",null,"BaseInputModule")),", like Unity's Standalone Input Module and third-party modules."),i.a.createElement("p",null,"If your use case requires a high degree of customization, you can instead create an ",i.a.createElement(x.a,{to:"/webview/IWebView"},i.a.createElement("code",null,"IWebView"))," outside of the prefab with ",i.a.createElement(K,{to:"/webview/Web#CreateWebView"},i.a.createElement("code",null,"Web.CreateWebView()")),"."))},$={name:"WebViewPrefab",type:"class",plainTextDescription:"WebViewPrefab is a prefab that makes it easy to create and interact with an IWebView in world space. It takes care of creating and initializing an IWebView, displaying its texture, and handling click and scroll interactions from the user.",description:i.a.createElement("div",null,i.a.createElement("p",null,i.a.createElement("code",null,"WebViewPrefab")," is a prefab that makes it easy to create and interact with an ",i.a.createElement(x.a,{to:"/webview/IWebView"},i.a.createElement("code",null,"IWebView"))," in world space. It takes care of creating and initializing an ",i.a.createElement("code",null,"IWebView"),", displaying its texture, and handling click and scroll interactions from the user. So, all you need to do is load some web content ",i.a.createElement(K,{to:"/webview/IWebView#LoadUrl"},"from a URL")," or ",i.a.createElement(K,{to:"/webview/IWebView#LoadHtml"},"HTML string"),", and then the user can view and interact with it."),i.a.createElement(q,{name:"WebViewPrefab"})),inheritsFrom:["MonoBehaviour"],sidebarSection:"core",members:[{name:"Clicked",returns:"EventHandler",type:"event",description:i.a.createElement("div",null,"Indicates that the prefab was clicked. Note that the prefab automatically  calls the ",i.a.createElement(K,{to:"/webview/IWebView#Click"},i.a.createElement("code",null,"IWebView.Click()"))," method for you.")},{name:"Initialized",returns:"EventHandler",type:"event",description:"Indicates that the prefab finished initializing, so its [`WebView`](#WebView) property is ready to use."},{name:"ClickingEnabled",returns:"bool",type:"property",description:"Clicking is enabled by default, but can be disabled by setting this property to `false`."},{name:"DragToScrollThreshold",returns:"float",type:"property",description:'In order to prevent dragging-to-scroll from triggering unwanted clicks, a click is discarded if the pointer drags beyond this threshold before a "pointer up" event occurs. The default threshold is 0.15.'},{name:"InitialUrl",returns:"string",type:"property",description:"If you drag a WebViewPrefab.prefab into the scene via the editor, you can set this property in the editor to make it so that the instance automatically initializes itself with the given URL."},{name:"ScrollingEnabled",returns:"bool",type:"property",description:"Scrolling is enabled by default, but can be disabled by setting this property to `false`."},{name:"ScrollSensitivity",static:!0,returns:"float",type:"property",description:"Allows the scroll sensitivity to be adjusted. The default sensitivity is 0.001."},{name:"Visible",returns:"bool",type:"property",description:"Controls whether the instance is visible or hidden."},{name:"WebView",returns:"IWebView",type:"property",description:"A reference to the prefab's `IWebView` instance, which is available after the [`Initialized`](#Initialized) event is raised. Before initialization is complete, this property is `null`."},{name:"Destroy",returns:"void",type:"method",description:"Destroys the instance and its children. Note that you don't need to call this method if you destroy the instance's parent with [`GameObject.Destroy()`](https://docs.unity3d.com/ScriptReference/Object.Destroy.html)."},{name:"Instantiate",returns:"WebViewPrefab",type:"method",static:!0,arguments:[{type:"float",name:"width"},{type:"float",name:"height"}],description:i.a.createElement("div",null,i.a.createElement("p",null,"Creates a new instance with the given dimensions in Unity units and initializes it asynchronously. The ",i.a.createElement("a",{href:"#WebView"},i.a.createElement("code",null,"WebView"))," property is available after initialization completes, which is indicated by the ",i.a.createElement("a",{href:"#Initialized"},i.a.createElement("code",null,"Initialized"))," event."),"Example:",i.a.createElement("pre",null,i.a.createElement("code",null,'// Create a 0.5 x 0.5 instance\nvar webViewPrefab = WebViewPrefab.Instantiate(0.5f, 0.5f);\n// Position the prefab how we want it\nwebViewPrefab.transform.parent = transform;\nwebViewPrefab.transform.localPosition = new Vector3(0, 0f, 0.5f);\nwebViewPrefab.transform.LookAt(transform);\n// Load a URL once the prefab finishes initializing\nwebViewPrefab.Initialized += (sender, e) =>; {\n    webViewPrefab.WebView.LoadUrl("https://vuplex.com");\n};')))},{name:"Instantiate",returns:"WebViewPrefab",type:"method",static:!0,arguments:[{type:"float",name:"width"},{type:"float",name:"height"},{type:"WebViewOptions",name:"options"}],description:"Like [`Instantiate(float width, float height)`](#Instantiate), except it also accepts an object of options flags that can be used to tweak the generated webview's behavior."},{name:"Init",returns:"void",type:"method",description:'\nAsynchronously initializes the instance using the width and height set via the Unity editor.\n\nYou only need to call this method if you place a WebViewPrefab.prefab in your scene via the Unity editor and don\'t set its "Initial URL" property. You don\'t need to call this method if you set the "Initial URL" property in the editor or if you instantiate the prefab programmatically at runtime using [`Instantiate()`](#Instantiate). In those cases, [`Init()`](#Init) is called automatically for you. This method asynchronously initializes the [`WebView`](#WebView) property, which is available for use after the [`Initialized`](#Initialized) event is raised.\n'},{name:"Init",returns:"void",type:"method",arguments:[{type:"float",name:"width"},{type:"float",name:"height"}],description:"Like [`Init()`](#Init), except it initializes the instance to the specified width and height in Unity units."},{name:"Init",returns:"void",type:"method",arguments:[{type:"float",name:"width"},{type:"float",name:"height"},{type:"WebViewOptions",name:"options"}],description:"Like `Init(float width, float height)`, except it also accepts an object of options flags that can be used to alter the webview's behavior."},{name:"Resize",returns:"void",type:"method",arguments:[{type:"float",name:"width"},{type:"float",name:"height"}],description:"Resizes the prefab mesh and webview to the given dimensions in Unity units."}]},Y=function(e){return i.a.createElement("div",{className:"warning-box"},i.a.createElement("h3",null,"Important note:"),i.a.createElement(x.a,{to:"/webview/WebViewPrefab"},i.a.createElement("code",null,"WebViewPrefab"))," and ",i.a.createElement(x.a,{to:"/webview/CanvasWebViewPrefab"},i.a.createElement("code",null,"CanvasWebViewPrefab"))," take care of ",e.resource," creation for you, so you only need to call this method directly if you need to create an ",i.a.createElement(x.a,{to:"/webview/IWebView"},i.a.createElement("code",null,"IWebView"))," instance outside of a prefab with ",i.a.createElement("a",{href:"#CreateWebView"},i.a.createElement("code",null,"Web.CreateWebView()")),".")},Z="On Windows and macOS, this method can only be called prior to creating any webviews.",Q=[M,z,{name:"CanvasWebViewPrefab",type:"class",plainTextDescription:"CanvasWebViewPrefab is a prefab that makes it easy to create and interact with an IWebView in a Unity Canvas. It takes care of creating and initializing an IWebView, displaying its texture, and handling click and scroll interactions from the user.",description:i.a.createElement("div",null,i.a.createElement("p",null,i.a.createElement("code",null,"CanvasWebViewPrefab")," is a prefab that makes it easy to create and interact with an ",i.a.createElement(x.a,{to:"/webview/IWebView"},i.a.createElement("code",null,"IWebView"))," in a ",i.a.createElement("a",{href:"https://docs.unity3d.com/Manual/UICanvas.html"},"Unity Canvas"),". It takes care of creating and initializing an ",i.a.createElement(x.a,{to:"/webview/IWebView"},i.a.createElement("code",null,"IWebView")),", displaying its texture, and handling click and scroll interactions from the user. So, all you need to do is load some web content from a URL or HTML string, and then the user can view and interact with it."),i.a.createElement("div",{className:"warning-box"},i.a.createElement("h3",null,"Important notes:"),i.a.createElement("ul",null,i.a.createElement("li",null,"The Canvas's ",i.a.createElement("strong",null,"Render Mode")," must be set to either ",i.a.createElement("i",null,'"Screen Space - Camera"')," or ",i.a.createElement("i",null,'"World Space"'),". ",i.a.createElement("i",null,'"Screen Space - Overlay"')," currently is not supported."),i.a.createElement("li",null,"A ",i.a.createElement("a",{href:"https://docs.unity3d.com/Manual/script-PhysicsRaycaster.html"},"Physics Raycaster")," must be attached to the camera to enable click events."))),i.a.createElement(q,{name:"CanvasWebViewPrefab"})),inheritsFrom:["MonoBehaviour"],sidebarSection:"core",members:[{name:"Initialized",returns:"EventHandler",type:"event",description:"Indicates that the prefab finished initializing, so its [`WebView`](#WebView) property is ready to use."},{name:"InitialResolution",returns:"int",type:"property",description:"If you drag a CanvasWebViewPrefab.prefab into the scene via the editor, you can set this property in the editor to set the webview's resolution in pixels per Unity unit. The default value is `1`."},{name:"InitialUrl",returns:"string",type:"property",description:"If you drag a CanvasWebViewPrefab.prefab into the scene via the editor, you can set this property in the editor to make it so that the instance automatically initializes itself with the given URL."},{name:"Visible",returns:"bool",type:"property",description:"Controls whether the instance is visible or hidden."},{name:"WebView",returns:"IWebView",type:"property",description:"A reference to the prefab's `IWebView` instance, which is available after the [`Initialized`](#Initialized) event is raised. Before initialization is complete, this property is `null`."},{name:"Instantiate",returns:"CanvasWebViewPrefab",type:"method",static:!0,description:i.a.createElement("div",null,i.a.createElement("p",null,"Creates a new instance and initializes it asynchronously. The ",i.a.createElement("a",{href:"#WebView"},i.a.createElement("code",null,"WebView"))," property is available after initialization completes, which is indicated by the ",i.a.createElement("a",{href:"#Initialized"},i.a.createElement("code",null,"Initialized"))," event."),"Example:",i.a.createElement("pre",null,i.a.createElement("code",null,'var canvas = GameObject.Find("Canvas");\ncanvasWebViewPrefab = CanvasWebViewPrefab.Instantiate();\ncanvasWebViewPrefab.transform.parent = canvas.transform;\nvar rectTransform = canvasWebViewPrefab.transform as RectTransform;\nrectTransform.anchoredPosition3D = Vector3.zero;\nrectTransform.offsetMin = Vector2.zero;\nrectTransform.offsetMax = Vector2.zero;\ncanvasWebViewPrefab.transform.localScale = Vector3.one;\ncanvasWebViewPrefab.Initialized += (sender, e) => {\n    canvasWebViewPrefab.WebView.LoadUrl("https://vuplex.com");\n};')))},{name:"Instantiate",returns:"CanvasWebViewPrefab",type:"method",static:!0,arguments:[{type:" WebViewOptions",name:"options"}],description:"Like [`Instantiate()`](#Instantiate), except it also accepts an object of options flags that can be used to alter the generated webview's behavior."},{name:"Init",returns:"void",type:"method",description:'\nAsynchronously initializes the instance.\n\nYou only need to call this method if you place a CanvasWebViewPrefab.prefab in your scene via the Unity editor and don\'t set its "Initial URL" property. You don\'t need to call this method if you set the "Initial URL" property in the editor or if you instantiate the prefab programmatically at runtime using [`Instantiate()`](#Instantiate). In those cases, this method is called automatically for you. This method asynchronously initializes the [`WebView`](#WebView) property, which is available for use after the [`Initialized`](#Initialized) event is raised.\n'},{name:"Init",returns:"void",type:"method",arguments:[{type:" WebViewOptions",name:"options"}],description:"Like [`Init()`](#Init), except it also accepts an object of options flags that can be used to alter the webview's behavior."}]},{name:"ConsoleMessageEventArgs",type:"class",description:"Event args for the `ConsoleMessageLogged` event.",inheritsFrom:"System.EventArgs",members:[{name:"Level",returns:"ConsoleMessageLevel",type:"property"},{name:"Message",returns:"string",type:"property",description:"The message logged to the JavaScript console."}]},{name:"ConsoleMessageLevel",type:"enum",description:"Levels for messages logged to the JavaScript console.",members:[{name:"Debug",type:"value",description:""},{name:"Error",type:"value",description:""},{name:"Log",type:"value",description:""},{name:"Warning",type:"value",description:""}]},{name:"EventArgs",type:"class",description:"A generic version of System.EventArgs.",inheritsFrom:"System.EventArgs",members:[{name:"Value",returns:"T",type:"property",description:"The wrapped value."}]},{name:"iOSWebView",type:"class",description:"The `IWebView` implementation used by [3D WebView for iOS](".concat(P.productUrls.IOS,"). This class also includes extra methods for iOS-specific functionality, which your application can call by using the approaches described in [this support article](https://support.vuplex.com/articles/how-to-call-platform-specific-apis#ios)."),inheritsFrom:["MonoBehaviour","IWebView"],sidebarSection:"platform",members:[{name:"GetFileUrlForBundleResource",returns:"string",type:"method",static:!0,arguments:[{type:"string",name:"fileName"}],description:'\nReturns a file URL for resource included in the iOS app bundle. This is useful for getting a file URL to a local file so that it can be loaded via `IWebView.LoadUrl()`.\n\nExample:\n```\nvar fileUrl = iOSWebView.GetFileUrlForBundleResource("my-static-files/my-webpage.html");\n```\n'},{name:"SetCustomUriSchemesEnabled",returns:"void",type:"method",static:!0,arguments:[{type:"bool",name:"enabled"}],description:"By default, `iOSWebView` blocks requests for custom schemes (ex: myapp://myaction?data=foo) in order to prevent sites like Wikipedia and YouTube from using URIs with custom schemes to launch their native apps via a webpage. However, if you want to override this behavior (for example, to use your own custom URI scheme within your app), you can enable custom URI schemes with this method. When a custom URI scheme is loaded (probably via JavaScript), the webview emits a UrlChanged event with the custom URL."},{name:"SetNativeKeyboardEnabled",returns:"void",type:"method",static:!0,arguments:[{type:"bool",name:"enabled"}],description:"Enables or disables the native iOS on-screen keyboard for new webviews. The default is disabled."}]},{name:"IWebView",type:"interface",plainTextDescription:"The primary interface for loading and interacting with web content.",description:i.a.createElement("p",null,i.a.createElement("code",null,"IWebView")," is the primary interface for loading and interacting with web content . ",i.a.createElement(x.a,{to:"/webview/WebViewPrefab"},i.a.createElement("code",null,"WebViewPrefab"))," takes care of creating one for you and hooking it up to the materials in its prefab. If you want to create an",i.a.createElement("code",null,"IWebView")," outside of the prefab (to connect to your own custom GameObject) you can use ",i.a.createElement(K,{to:"/webview/Web#CreateWebView"},i.a.createElement("code",null,"Web.CreateWebView()")),"."),sidebarSection:"core",members:[{name:"LoadProgressChanged",returns:"EventHandler<ProgressChangedEventArgs>",type:"event",description:"Indicates that the page load percentage changed."},{name:"MessageEmitted",returns:"EventHandler<EventArgs<string>>",type:"event",description:"\nIndicates that JavaScript running in the page used the `window.vuplex.postMessage` JavaScript API to emit a message to the Unity application.\n\nJavaScript example for sending a message:\n\n```\n// The window.vuplex object gets created when the page starts loading,\n// so we double-check that it exists before using it here.\n// You can skip this step if you're sending a message after the page has loaded.\nif (window.vuplex) {\n  // The window.vuplex object already exists, so go ahead and send the message.\n  sendMessageToCSharp();\n} else {\n  // The window.vuplex object hasn't been initialized yet because the page is still\n  // loading, so add an event listener to send the message once it's initialized.\n  window.addEventListener('vuplexready', sendMessageToCSharp);\n}\n\nfunction sendMessageToCSharp() {\n  // This object passed to postMessage() automatically gets serialized as JSON\n  // and is emitted via the C# MessageEmitted event. This API mimics the window.postMessage API.\n  window.vuplex.postMessage({ type: 'greeting', message: 'Hello from JavaScript!' });\n}\n```\n\nFor more details, please see [this support article](https://support.vuplex.com/articles/how-to-send-messages-from-javascript-to-c-sharp).\n"},{name:"PageLoadFailed",returns:"EventHandler",type:"event",description:"Indicates that the page failed to load. This can happen, for instance, if DNS is unable to resolve the hostname."},{name:"TitleChanged",returns:"EventHandler<EventArgs<string>>",type:"event",description:"Indicates that the page's title changed."},{name:"UrlChanged",returns:"EventHandler<UrlChangedEventArgs>",type:"event",description:"Indicates that the URL of the webview changed, either due to user interaction or JavaScript."},{name:"VideoRectChanged",returns:"EventHandler<EventArgs<Rect>>",type:"event",description:"Indicates that the rect of the playing video changed. Note that `WebViewPrefab` automatically handles this event for you."},{name:"PluginType",returns:"WebPluginType",type:"property",description:"Indicates the instance's plugin type."},{name:"Resolution",returns:"int",type:"property",description:"The webview's resolution in pixels per Unity unit."},{name:"Size",returns:"Vector2",type:"property",description:"The webview's current size in Unity units."},{name:"SizeInPixels",returns:"Vector2",type:"property",description:"The webview's current size in pixels."},{name:"Texture",returns:"Texture2D",type:"property",description:'\nThe texture for the webview\'s web content.\n\nThis texture is an "external texture" created with [`Texture2D.CreateExternalTexture()`](https://docs.unity3d.com/ScriptReference/Texture2D.CreateExternalTexture.html). An undocumented characteristic of external textures in Unity is that not all `Texture2D` methods work for them. For example, [`Texture2D.GetRawTextureData()`](https://docs.unity3d.com/ScriptReference/Texture2D.GetRawTextureData.html) and [`ImageConversion.EncodeToPNG()`](https://docs.unity3d.com/ScriptReference/ImageConversion.EncodeToPNG.html) fail for external textures. To compensate, the `IWebView` interface includes ts own [`GetRawTextureData()`](#GetRawTextureData) and [`CaptureScreenshot()`](#CaptureScreenshot) methods to replace them.\n'},{name:"Url",returns:"string",type:"property",description:"The current URL."},{name:"VideoTexture",returns:"Texture2D",type:"property",description:"The texture for the webview's video content. Note that only Android and iOS use this separate texture for video."},{name:"Init",returns:"void",type:"method",arguments:[{type:"Texture2D",name:"viewportTexture"},{type:"float",name:"width"},{type:"float",name:"height"},{type:"Texture2D",name:"videoTexture"}],description:"Initializes a newly created webview with the given viewport and video textures created with `Web.CreateMaterial()` and the dimensions in Unity units. Note that `WebViewPrefab` automatically calls this method for you, so you only need to invoke this directly if you manually create a WebView outside of the prefab using `Web.CreateWebView()`. Also, a separate texture for video is only needed on Android and iOS."},{name:"Init",returns:"void",type:"method",arguments:[{type:"Texture2D",name:"viewportTexture"},{type:"float",name:"width"},{type:"float",name:"height"}],description:"Like the other `Init()` method, but with video support disabled on Android and iOS."},{name:"Blur",returns:"void",type:"method",description:"Makes the webview relinquish focus."},{name:"CanGoBack",returns:"Task<bool>",type:"method",description:"Checks whether the webview can go back with a call to `GoBack()`."},{name:"CanGoForward",returns:"Task<bool>",type:"method",description:"Checks whether the webview can go forward with a call to `GoForward()`."},{name:"CanGoBack",returns:"void",type:"method",arguments:[{type:"Action<bool>",name:"callback"}],description:"Like the other version of `CanGoBack()`, except it uses a callback instead of a `Task` in order to be compatible with versions of .NET before 4.0."},{name:"CanGoForward",returns:"void",type:"method",arguments:[{type:"Action<bool>",name:"callback"}],description:"Like the other version of `CanGoForward()`, except it uses a callback instead of a `Task` in order to be compatible with versions of .NET before 4.0."},{name:"CaptureScreenshot",returns:"Task<bytes[]>",type:"method",description:"Returns a PNG image of the content visible in the webview. Note that on iOS, screenshots do not include video content, which appears black."},{name:"CaptureScreenshot",returns:"void",type:"method",arguments:[{type:"Action<bytes[]>",name:"callback"}],description:"Like the other version of `CaptureScreenshot()`, except it uses a callback instead of a `Task` in order to be compatible with versions of .NET before 4.0."},{name:"Click",returns:"void",type:"method",arguments:[{type:"Vector2",name:"point"}],description:"Clicks at the given point in the webpage, dispatching both a mouse down and a mouse up event. The x and y components of the point are values  between 0 and 1 that are normalized to the width and height, respectively. For example,  `point.x = x in Unity units / width in Unity units`. Like in the browser, the origin is in the upper-left corner, the positive direction of the y-axis is down, and the positive direction of the x-axis is right."},{name:"DisableViewUpdates",returns:"void",type:"method",description:"Disables the webview from rendering to its texture."},{name:"Dispose",returns:"void",type:"method",description:"Destroys the webview, releasing all of its resources."},{name:"EnableViewUpdates",returns:"void",type:"method",description:"Re-enables rendering after a call to `DisableViewUpdates()`."},{name:"ExecuteJavaScript",returns:"Task<string>",type:"method",arguments:[{type:"string",name:"javaScript"}],description:"\nExecutes the given script in the context of the webpage's main frame and returns the result.\n\nNote: When targeting .NET 4.6 or newer, this method returns a `Task<string>`, and when targeting an older version of .NET, this method returns `void`."},{name:"ExecuteJavaScript",returns:"void",type:"method",arguments:[{type:"string",name:"javaScript"},{type:"Action<string>",name:"callback"}],description:"\nExecutes the given script in the context of the webpage's main frame and calls the given callback with the result.\n\nThis method is functionally equivalent to the version of `ExecuteJavaScript()` that returns a `Task`, except it uses a callback instead of a `Task` in order to be compatible with versions of .NET before 4.0.\n"},{name:"Focus",returns:"void",type:"method",description:"Makes the webview take focus. Currently, this method is only needed on iOS."},{name:"GoBack",returns:"void",type:"method",description:"Navigates back to the previous page in the webview's history."},{name:"GetRawTextureData",returns:"Task<byte[]>",type:"method",description:"\nA replacement for [`Texture2D.GetRawTextureData()`](https://docs.unity3d.com/ScriptReference/Texture2D.GetRawTextureData.html) for [`IWebView.Texture`](#Texture).\n\nUnity's `Texture2D.GetRawTextureData()` method currently does not work for textures created with `Texture2D.CreateExternalTexture()`. So, this method serves as a replacement by providing the equivalent functionality. You can load the bytes returned by this method into another texture using [`Texture2D.LoadRawTextureData()`](https://docs.unity3d.com/ScriptReference/Texture2D.LoadRawTextureData.html). Note that on iOS, the texture data excludes video content, which appears black.\n\nExample:\n```cs\nvar textureData = await webView.GetRawTextureData();\nvar texture = new Texture2D(\n    (int)webView.SizeInPixels.x,\n    (int)webView.SizeInPixels.y,\n    TextureFormat.RGBA32,\n    false,\n    false\n);\ntexture.LoadRawTextureData(textureData);\ntexture.Apply();\n```\n"},{name:"GetRawTextureData",returns:"void",type:"method",arguments:[{type:"Action<byte[]>",name:"callback"}],description:"Like the other version of `GetRawTextureData()`, except it uses a callback instead of a `Task` in order to be compatible with versions of .NET before 4.0."},{name:"GoForward",returns:"void",type:"method",description:"Navigates forward to the next page in the webview's history."},{name:"HandleKeyboardInput",returns:"void",type:"method",arguments:[{type:"string",name:"key"}],description:'Dispatches a keystroke to the webview. A key can either be a single character representing a unicode character (e.g. "A", "b", "?") or a [JavaScript Key value](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values) (e.g. "ArrowUp", "Enter").'},{name:"LoadHtml",returns:"void",type:"method",arguments:[{type:"string",name:"html"}],description:"\nLoads the webpage contained in the given HTML string.\n\nExample:\n```\nwebView.LoadHtml(@\"\n  <!DOCTYPE html>\n  <html>\n    <head>\n      <title>Test Page</title>\n      <style>\n        h1 {\n          font-family: Helvetica, Arial, Sans-Serif;\n        }\n      </style>\n    </head>\n    <body>\n      <h1>LoadHtml Example</h1>\n      <script>\n        console.log('This page was loaded!');\n      <\/script>\n    </body>\n  </html>\"\n);\n```\n"},{name:"LoadUrl",returns:"void",type:"method",arguments:[{type:"string",name:"url"}],description:"\nNavigates to the given URL. Note that this can also be a file URL that points to a local file. For example, you can assemble a file URL on Android if you know the path to the resource:\n\n`file:///android_asset/my-static-files/my-webpage.html`\n\nOn iOS, you can use `iOSWebView.GetFileUrlForBundleResource()` to ask the system for a file URL to a given bundle resource.\n"},{name:"LoadUrl",returns:"void",type:"method",arguments:[{type:"string",name:"url"},{type:"Dictionary<string, string>",name:"additionalHttpHeaders"}],description:"Like `LoadUrl(string url)`, but also sends the given HTTP request headers when loading the URL."},{name:"Reload",returns:"void",type:"method",description:"Reloads the current page."},{name:"Resize",returns:"void",type:"method",arguments:[{type:"float",name:"width"},{type:"float",name:"height"}],description:"Resizes the webview to the dimensions given in Unity units. Note that if you're using `WebViewPrefab`, you should call `WebViePrefab.Resize()` instead."},{name:"PostMessage",returns:"void",type:"method",arguments:[{type:"string",name:"data"}],description:"\nPosts a message that JavaScript within the webview can listen for using `window.vuplex.addEventListener('message', function(message) {})`. The provided data string is passed as the data property of the message object.\n\nFor more details, please see [this support article](https://support.vuplex.com/articles/how-to-send-messages-from-javascript-to-c-sharp).\n"},{name:"Scroll",returns:"void",type:"method",arguments:[{type:"Vector2",name:"scrollDelta"}],description:"\nScrolls the webview's top-level body by the given delta.\n\nIf you want to scroll a specific section of the page, see `Scroll(Vector2 scrollDelta, Vector2 mousePosition)` instead.\n\n`scrollDelta` is in Unity units, and because the browser's origin is in the upper-left corner, y-axis' positive direction is down, and the x-axis' positive direction is right.\n"},{name:"Scroll",returns:"void",type:"method",arguments:[{type:"Vector2",name:"scrollDelta"},{type:"Vector2",name:"mousePosition"}],description:"\nScrolls by the given delta at the given mouse position.\n\n`scrollDelta` is in Unity units, and because the browser's origin is in the upper-left corner, the y-axis' positive direction is down, and the x-axis' positive direction is right.\n\nThe x and y components of `mousePosition` are values between 0 and 1 that are normalized to the width and height, respectively. For example, `point.x = x in Unity units / width in Unity units`.\n"},{name:"SetResolution",returns:"void",type:"method",arguments:[{type:"int",name:"pixelsPerUnityUnit"}],description:"\nSets the webview's resolution in pixels per Unity unit.\n\nThe default resolution is 1300 pixels per Unity unit. This method is useful, for example, if you want web content to appear larger or smaller. Setting a lower resolution decreases the pixel density, but has the effect of making web content appear larger. Setting a higher resolution increases the pixel density, but has the effect of making content appear smaller.\n"},{name:"ZoomIn",returns:"void",type:"method",description:"Zooms into the currently loaded web content. Note that the zoom level gets reset when a new page is loaded."},{name:"ZoomOut",returns:"void",type:"method",description:"Zooms back out after a previous call to `ZoomIn()`. Note that the zoom level gets reset when a new page is loaded."}]},{name:"Keyboard",type:"class",plainTextDescription:"A 3D, on-screen keyboard that you can programmatically place in your scene.",description:i.a.createElement("div",null,i.a.createElement("p",null,"A 3D, on-screen keyboard that you can programmatically place in your scene."),i.a.createElement("p",null,"The keyboard is a web UI that runs inside a ",i.a.createElement(x.a,{to:"/webview/WebViewPrefab"},i.a.createElement("code",null,"WebViewPrefab"))," instance and emits messages to the C# to indicate when characters have been pressed. The keyboard UI is open source and available ",i.a.createElement("a",{href:"https://github.com/vuplex/unity-keyboard"},"on GitHub.")),"Example:",i.a.createElement("pre",null,i.a.createElement("code",null,'// First, create a WebViewPrefab for our main web content.\nvar mainWebContent = WebViewPrefab.Instantiate(0.6f, 0.3f);\nmainWebContent.transform.parent = transform;\nmainWebContent.transform.localPosition = new Vector3(0, 0f, 0.4f);\nmainWebContent.transform.LookAt(transform);\nmainWebContent.Initialized += (sender, e) => mainWebContent.WebView.LoadUrl("https://www.google.com");\n\n// Add the keyboard under the main webview.\nvar keyboard = Keyboard.Instantiate();\nkeyboard.transform.parent = mainWebContent.transform;\nkeyboard.transform.localPosition = new Vector3(0, -0.31f, 0);\nkeyboard.transform.localEulerAngles = new Vector3(0, 0, 0);\n// Hook up the keyboard so that characters are routed to the main webview.\nkeyboard.InputReceived += (sender, e) => mainWebContent.WebView.HandleKeyboardInput(e.Value);')),i.a.createElement("p",null,"The keyboard supports layouts for the following languages and automatically sets the layout based on the operating system's default language:"),i.a.createElement("ul",null,i.a.createElement("li",null,"English"),i.a.createElement("li",null,"Spanish"),i.a.createElement("li",null,"French"),i.a.createElement("li",null,"German"),i.a.createElement("li",null,"Russian"),i.a.createElement("li",null,"Danish"),i.a.createElement("li",null,"Norwegian"),i.a.createElement("li",null,"Swedish"))),inheritsFrom:["MonoBehaviour"],sidebarSection:"core",members:[{name:"InputReceived",returns:"EventHandler<EventArgs<string>>",type:"event",description:"Indicates that the user clicked a key on the keyboard."},{name:"Initialized",returns:"EventHandler",type:"event",description:"Indicates that the keyboard finished initializing."},{name:"WebViewPrefab",returns:"WebViewPrefab",type:"property",description:"The `WebViewPrefab` instance used for the keyboard UI."},{name:"Instantiate",returns:"Keyboard",type:"method",static:!0,description:"Creates and initializes an instance using the default width and height."},{name:"Instantiate",returns:"Keyboard",type:"method",static:!0,arguments:[{type:"float",name:"width"},{type:"float",name:"height"}],description:"Creates and initializes an instance using the specified width and height."},{name:"Init",returns:"void",type:"method",arguments:[{type:"float",name:"width"},{type:"float",name:"height"}],description:"Initializes the keyboard with the specified width and height. [`Instantiate()`](#Instantiate) calls this method for you, so you only need to call this method directly if you place the `Keyboard.cs` script on your own custom object."}]},{name:"ProgressChangedEventArgs",type:"class",description:"Event args to indicate the load progress of a webpage.",inheritsFrom:"System.EventArgs",members:[{name:"Progress",returns:"float",type:"property",description:"The estimated load progress normalized to a float between 0 and 1."},{name:"Type",returns:"ProgressChangeType",type:"property",description:"The load progress event type."}]},{name:"ProgressChangeType",type:"enum",members:[{name:"Started",type:"value",description:""},{name:"Finished",type:"value",description:""},{name:"Failed",type:"value",description:""},{name:"Updated",type:"value",description:""}]},{name:"ScriptAlertEventArgs",type:"class",description:"Event args for the `ScriptAlert` event.",inheritsFrom:"System.EventArgs",members:[{name:"Message",returns:"string",type:"property",description:"The alert message."}]},{name:"StandaloneWebView",type:"class",description:"The `IWebView` implementation used by [3D WebView for Windows and macOS](".concat(P.productUrls.WINDOWS_AND_MAC,"). This class also includes extra methods for Standalone-specific functionality, which your application can call by using the approaches described in [this support article](https://support.vuplex.com/articles/how-to-call-platform-specific-apis#standalone)."),inheritsFrom:["MonoBehaviour","IWebView"],sidebarSection:"platform",members:[{name:"EnableRemoteDebugging",returns:"void",type:"method",static:!0,arguments:[{type:"int",name:"portNumber"}],description:"Enables remote debugging with Chrome DevTools on the given port. For example, if you provide `8080` as the `portNumber`, you can go to localhost:8080 in Chrome to see a list of webviews to inspect."},L,_,N,{name:"SetAudioAndVideoCaptureEnabled",static:!0,returns:"void",type:"method",arguments:[{type:"bool",name:"enabled"}],description:"\nBy default, web pages cannot access the device's camera or microphone via JavaScript. Invoking `SetAudioAndVideoCaptureEnabled(true)` allows **all web pages** to access the camera and microphone.\n\nThis is useful, for example, to enable WebRTC support. Note that this method can only be called prior to creating any webviews.\n"},{name:"SetCommandLineArguments",static:!0,returns:"void",type:"method",arguments:[{type:"string",name:"args"}],description:'\nSets additional command line arguments to pass to Chromium.\n\n[Here\'s an unofficial list of Chromium command line arguments](https://peter.sh/experiments/chromium-command-line-switches/). Note that this method can only be called prior to creating any webviews.\n\nExample:\n```cs\nStandaloneWebView.SetCommandLineArguments("--ignore-certificate-errors --disable-web-security");\n```\n'},{name:"SetZoomLevel",returns:"void",type:"method",arguments:[{type:"float",name:"zoomLevel"}],description:"Sets the zoom level to the specified value. Specify `0.0` to reset the zoom level."}]},{name:"UrlChangedEventArgs",type:"class",description:"Event args to indicate that the webpage URL changed.",inheritsFrom:"System.EventArgs",members:[{name:"Url",returns:"string",type:"property",description:"The new webpage URL."},{name:"Title",returns:"string",type:"property",description:"The new webpage title."},{name:"Type",returns:"string",type:"property",description:'Indicates the type of URL change (`"LOAD"`, `"PUSH_STATE"`, `"REPLACE_STATE"`, or `"HASH_CHANGE"`).'}]},{name:"ViewportMaterialView",type:"class",description:"Script that can be attached to a GameObject with a mesh renderer in order to render the contents of the WebView onto the mesh. Note that `WebViewPrefab` takes care of handling this for you, so you only need to deal with `ViewportMaterialView` directly if you create `IWebView` instances outside of a prefab using `Web.CreateWebView()`.",inheritsFrom:"MonoBehaviour",members:[{name:"Initialized",returns:"EventHandler",type:"event",description:"Indicates when the view's `Texture` property has finished initializing after a call to the asynchronous`Init()` method."},{name:"IsVideo",returns:"bool",type:"property",description:"A property set via the Unity editor to indicate that the material should default to the video maerial instead of the viewport material. The video material has a lower render queue than the viewport material to ensure that videos are rendered behind the viewport."},{name:"Texture",returns:"Texture2D",type:"property",description:"The texture for the view, which is a special texture created by `Web.CreateTexture()`. The texture is created asynchronously when `Init()` is called, this property will be `null` until the `Initialized` event is raised. If the webview raises its `TextureChanged` event, this property can be set to the new texture."},{name:"Init",returns:"void",type:"method",description:"Initializes the view with the default material. Initialization is asynchronous, so the `Texture` property will be `null` until the `Initialized` event is raised."}]},{name:"WebPluginType",type:"enum",description:"",members:[{name:"Android",type:"value",description:""},{name:"AndroidGecko",type:"value",description:""},{name:"iOS",type:"value",description:""},{name:"Mac",type:"value",description:""},{name:"Mock",type:"value",description:""},{name:"Windows",type:"value",description:""},{name:"UniversalWindowsPlatform",type:"value",description:""}]},{name:"WebViewOptions",type:"struct",description:"Options that can be passed to `WebViewPrefab.Instantiate()` to alter the behavior of the WebView created.",members:[{name:"disableVideo",returns:"bool",type:"property",description:"Videos are enabled by default, but you can disable them with this option if you know you will not need to render videos. Setting this option to `true` will prevent the prefab from allocating a second texture for video and prevent it from allocating resources for video playback."},{name:"preferredPlugins",returns:"WebPluginType[]",type:"property",description:"\n3D WebView automatically selects which native plugin to use based on the build platform and which plugins are installed in the project. However, if you have multiple plugins installed for a single platform, this option can be used to specify which plugin to use in order to override the default behavior.\n\nCurrently, Android is the only platform that supports multiple 3D WebView plugins: `WebPluginType.Android` and `WebPluginType.AndroidGecko`. If both plugins are installed in the same project, `WebPluginType.AndroidGecko` will be used by default. However, you can override this to force `WebPluginType.Android` to be used instead by specifying `preferredPlugins = new WebPluginType[] { WebPluginType.Android }`.\n      "}]},$,{name:"Web",type:"class",static:!0,description:"`Web` is the top-level static class for the module. It contains static methods for configuring the module and creating resources.",sidebarSection:"core",members:[{name:"ClearAllData",returns:"void",type:"method",static:!0,description:i.a.createElement("div",null,i.a.createElement("p",null,"Clears all data that persists between webview instances, like cookies, storage, and cached resources."),i.a.createElement("div",{className:"warning-box"},i.a.createElement("h3",null,"Important notes:"),i.a.createElement("ul",null,i.a.createElement("li",null,Z),i.a.createElement("li",null,"On Universal Windows Platform, this method doesn't clear cookies due to a UWP limitation."))))},{name:"CreateMaterial",returns:"void",type:"method",static:!0,arguments:[{type:"Action<Material>",name:"callback"}],description:i.a.createElement("div",null,i.a.createElement("p",null,"Creates a material and texture that a webview can use for rendering. This method is asynchronous in order to allow textures to be created on the render thread, and the provided callback is called once the material has been created."),i.a.createElement(Y,{resource:"material"}))},{name:"CreateVideoMaterial",returns:"void",type:"method",static:!0,arguments:[{type:"Action<Material>",name:"callback"}],description:i.a.createElement("div",null,i.a.createElement("p",null,"Like ",i.a.createElement("a",{href:"#CreateMaterial"},i.a.createElement("code",null,"CreateMaterial")),", except it creates a material that a webview can use for rendering video. If the platform doesn't need a separate material and texture for video, this method returns ",i.a.createElement("code",null,"null"),"."),i.a.createElement("p",null,"Currently, iOS is the only platform that always uses a separate texture for video. Android only uses a separate video texture on versions of Android older than 6.0. For other platforms, video content is always integrated into the main texture."),i.a.createElement(Y,{resource:"material"}))},{name:"CreateTexture",returns:"void",type:"method",static:!0,arguments:[{type:"float",name:"width"},{type:"float",name:"height"},{type:"Action<Texture2D>",name:"callback"}],description:i.a.createElement("div",null,i.a.createElement("p",null,"Creates a special texture that a webview can use for rendering, using the given width and height in Unity units (not pixels). The webview plugin automatically resizes a texture when it initializes or resizes a webview, so in practice, you can simply use the dimensions of 1x1 like ",i.a.createElement("code",null,"CreateTexture(1, 1, callback)"),". This method is asynchronous in order to allow textures to be created on the render thread, and the provided callback is called once the material has been created."),i.a.createElement(Y,{resource:"texture"}))},{name:"CreateWebView",returns:"IWebView",type:"method",static:!0,description:i.a.createElement("div",null,i.a.createElement("p",null,"Creates a new webview in a platform-agnostic way. After the ",i.a.createElement(x.a,{to:"/webview/IWebView"},i.a.createElement("code",null,"IWebView"))," is created, it must be initialized by calling one of its ",i.a.createElement(x.a,{to:"/webview/IWebView#Init"},i.a.createElement("code",null,"Init()"))," methods."),i.a.createElement("div",{className:"warning-box"},i.a.createElement("h3",null,"Important note:"),i.a.createElement(x.a,{to:"/webview/WebViewPrefab"},i.a.createElement("code",null,"WebViewPrefab"))," and ",i.a.createElement(x.a,{to:"/webview/CanvasWebViewPrefab"},i.a.createElement("code",null,"CanvasWebViewPrefab"))," take care of creating and managing an ",i.a.createElement(x.a,{to:"/webview/IWebView"},i.a.createElement("code",null,"IWebView"))," instance for you, so you only need to call this method directly if you need to create a webview outside of a prefab (for example, to connect it to your own custom GameObject)."),"Example:",i.a.createElement("pre",null,i.a.createElement("code",null,'Web.CreateMaterial(material => {\n    // Set the material attached to this GameObject so that it can display the web content.\n    GetComponent<Renderer>().material = material;\n    var webView = Web.CreateWebView();\n    webView.Init(material.mainTexture, 1, 1);\n    webView.LoadUrl("https://vuplex.com");\n});')))},{name:"SetStorageEnabled",returns:"void",type:"method",static:!0,arguments:[{type:"bool",name:"enabled"}],description:i.a.createElement("div",null,i.a.createElement("p",null,"Controls whether data like cookies, localStorage, and cached resources is persisted between webview instances. The default is ",i.a.createElement("code",null,"true"),", but this can be set to ",i.a.createElement("code",null,"false"),' to achieve an "incognito mode".'),i.a.createElement("div",{className:"warning-box"},i.a.createElement("h3",null,"Important notes:"),i.a.createElement("ul",null,i.a.createElement("li",null,Z),i.a.createElement("li",null,"On Universal Windows Platform, this method doesn't disable cookies due to a UWP limitation."))))},{name:"SetUserAgent",returns:"void",type:"method",static:!0,arguments:[{type:"bool",name:"mobile"}],description:i.a.createElement("div",null,i.a.createElement("p",null,"By default, webviews use a User-Agent that looks that of a desktop computer so that servers return the desktop versions of websites. If you instead want the mobile versions of websites, you can invoke this method with ",i.a.createElement("code",null,"true")," to use the User-Agent for a mobile device."),i.a.createElement("div",{className:"warning-box"},i.a.createElement("h3",null,"Important note:"),Z))},{name:"SetUserAgent",returns:"void",type:"method",static:!0,arguments:[{type:"string",name:"userAgent"}],description:i.a.createElement("div",null,i.a.createElement("p",null,"Configures the module to use a custom User-Agent string."),i.a.createElement("div",{className:"warning-box"},i.a.createElement("h3",null,"Important note:"),Z))}]}],X=n(17),ee=(n(343),function(e){function t(){return Object(w.a)(this,t),Object(v.a)(this,Object(g.a)(t).apply(this,arguments))}return Object(y.a)(t,e),Object(f.a)(t,[{key:"componentDidMount",value:function(){s.b.pageview("/webview/android-comparison")}},{key:"render",value:function(){return i.a.createElement("div",{className:"page android-comparison-page"},i.a.createElement(X.a,null,i.a.createElement("title",null,"Android Package Comparison"),i.a.createElement("meta",{name:"description",content:"Comparison of 3D WebView for Android vs. 3D WebView for Android with Gecko Engine."})),i.a.createElement("h1",null,"3D WebView for Android: version comparison"),i.a.createElement("p",null,"There are two different versions of 3D WebView for Android, which use different browser engines internally:"),i.a.createElement("ul",null,i.a.createElement("li",null,i.a.createElement("a",{href:P.productUrls.ANDROID},"3D WebView for Android")," uses Android's built-in ",i.a.createElement("code",null,i.a.createElement("a",{href:"https://developer.android.com/reference/android/webkit/WebView"},"android.webkit.WebView"))," package as its browser engine"),i.a.createElement("li",null,i.a.createElement("a",{href:P.productUrls.ANDROID_GECKO},"3D WebView for Android with Gecko Engine")," embeds Mozilla's ",i.a.createElement("a",{href:"https://en.wikipedia.org/wiki/Gecko_(software)"},"Gecko Browser Engine")," for improved video and WebGL support on devices like Oculus Go and Oculus Quest")),i.a.createElement("p",null,"The original ",i.a.createElement("a",{href:P.productUrls.ANDROID},"3D WebView for Android")," package is recommended for most Android development, because its native library size is much smaller and it supports more features, like transparent webviews. However, if you're developing for Oculus Go or Oculus Quest and need to support video or WebGL, then ",i.a.createElement("a",{href:P.productUrls.ANDROID_GECKO},"3D WebView for Android with Gecko Engine")," is recommended instead. Or if you prefer, you can use both versions together in order to get the best of both worlds. A more detailed comparison of the two versions is provided below."),i.a.createElement("h2",null,i.a.createElement("a",{href:P.productUrls.ANDROID},"3D WebView for Android")),i.a.createElement("ul",null,i.a.createElement("li",null,"Uses Android's built-in ",i.a.createElement("code",null,i.a.createElement("a",{href:"https://developer.android.com/reference/android/webkit/WebView"},"android.webkit.WebView"))," package as its browser engine"),i.a.createElement("li",null,"Has a small storage footprint, because the browser engine is built into the operating system instead of the library"),i.a.createElement("li",null,"Video and WebGL support:",i.a.createElement("ul",null,i.a.createElement("li",null,"Android \u2265 6: supports native video and WebGL"),i.a.createElement("li",null,"Android < 6: limited video support and no WebGL support"),i.a.createElement("li",null,"Oculus Quest and Go devices: limited video support and no WebGL support"))),i.a.createElement("li",null,"Supports transparent webviews")),i.a.createElement("h2",null,i.a.createElement("a",{href:P.productUrls.ANDROID_GECKO},"3D WebView for Android with Gecko Engine")),i.a.createElement("ul",null,i.a.createElement("li",null,"Uses Mozilla's ",i.a.createElement("a",{href:"https://en.wikipedia.org/wiki/Gecko_(software)"},"Gecko Browser Engine")," for improved video and WebGL support"),i.a.createElement("li",null,"Has a large storage footprint, because the browser engine is embedded in the library instead of the operating system"),i.a.createElement("li",null,"Video and WebGL support:",i.a.createElement("ul",null,i.a.createElement("li",null,"Android \u2265 5: supports native video and WebGL"),i.a.createElement("li",null,"Oculus Quest and Go devices: supports native video and WebGL"))),i.a.createElement("li",null,"Doesn't support transparent webviews")))}}]),t}(a.Component)),te=function(){return i.a.createElement(X.a,null,i.a.createElement("title",null,"Unity 3D WebView Asset for Android, iOS, Windows, macOS, and UWP / Hololens | Vuplex"),i.a.createElement("meta",{name:"description",content:"Easily add an interactive web browser to your Unity 3D scenes to render websites and HTML. Works with Android, iOS, Windows, macOS, and Universal Windows Platform (UWP)."}))},ne=n(108),ae=n.n(ne),ie=n(109),re=n.n(ie),oe=n(110),se=n.n(oe),le=n(111),ce=n.n(le),de=n(112),me=n.n(de),ue=n(47),pe=n(113),he=n.n(pe),be=n(70),we=n.n(be),fe=n(114),ve=n.n(fe),ge=n(115),ye=n.n(ge),Ee=n(116),xe=n.n(Ee),ke=n(117),We=n.n(ke),Se=n(118),Ie=n.n(Se),Ve=(n(407),[{name:"HTC Viveport",imageUrl:Ie.a,linkUrl:"https://www.viveport.com"},{name:"Synergy",imageUrl:xe.a,linkUrl:"https://www.unity-studios.com/synergy"},{name:"Glue",imageUrl:ve.a,linkUrl:"https://glue.work"},{name:"Saxo Bank",imageUrl:ye.a,linkUrl:"https://www.home.saxo"},{name:"University of Georgia",imageUrl:We.a,linkUrl:"https://www.uga.edu"}]);if(Ve.length<7){var Ce=Ve.map(function(e){var t=he()(e);return t.name+="2",t});Ve.push.apply(Ve,Object(ue.a)(Ce))}var Ae=function(e){function t(){var e,n;Object(w.a)(this,t);for(var a=arguments.length,r=new Array(a),o=0;o<a;o++)r[o]=arguments[o];return(n=Object(v.a)(this,(e=Object(g.a)(t)).call.apply(e,[this].concat(r)))).state={leftCustomerIndex:0,containerWidth:0,carouselHasMoved:!1},n._containerRef=null,n._checkContainerWidth=function(){if(n._containerRef){var e=n._containerRef.getBoundingClientRect().width;n.state.containerWidth!==e&&n.setState({containerWidth:e})}},n._moveLeft=function(){n.setState({leftCustomerIndex:0===n.state.leftCustomerIndex?Ve.length-1:n.state.leftCustomerIndex-1,carouselHasMoved:!0})},n._moveRight=function(){n.setState({leftCustomerIndex:n.state.leftCustomerIndex===Ve.length-1?0:n.state.leftCustomerIndex+1,carouselHasMoved:!0})},n._setContainerRect=function(e){if(n._containerRef=e,e){var t=e.getBoundingClientRect();n.setState({containerWidth:t.width})}},n._renderCustomer=function(e,t){return i.a.createElement("a",{key:e.name,href:e.linkUrl,target:"_blank",style:n._getCustomerStyle(e,t)},i.a.createElement("img",{src:e.imageUrl,alt:e.name}))},n}return Object(y.a)(t,e),Object(f.a)(t,[{key:"componentDidMount",value:function(){this._intervalId=setInterval(this._checkContainerWidth,500)}},{key:"componentWillUnmount",value:function(){clearInterval(this._intervalId)}},{key:"render",value:function(){return i.a.createElement("div",{className:"customers-section"},i.a.createElement("button",{onClick:this._moveLeft},i.a.createElement("img",{src:we.a,alt:"caret pointing left"})),i.a.createElement("div",null,i.a.createElement("div",{ref:this._setContainerRect},Ve.map(this._renderCustomer))),i.a.createElement("button",{onClick:this._moveRight},i.a.createElement("img",{src:we.a,alt:"caret pointing right"})))}},{key:"_getCustomerStyle",value:function(e,t){for(var n=this.state,a=n.containerWidth,i=n.leftCustomerIndex,r=.3*a,o=(a-3*r)/2,s=[],l=0;l<3;l++){var c=i+l;c>Ve.length-1&&(c-=Ve.length),s.push(c)}var d=0,m=0===i?Ve.length-1:i-1,u=0===m?Ve.length-1:m-1,p=s[s.length-1],h=p===Ve.length-1?0:p+1;s.includes(t)?d=s.indexOf(t)*(r+o):d=t===m||t===u?-r-o:a+o;return{width:r,left:d,transition:(s.includes(t)||t===m||t===h)&&this.state.carouselHasMoved?"left 0.5s ease-in-out":"none"}}}]),t}(a.Component),Te=(n(409),function(e){function t(){var e,n;Object(w.a)(this,t);for(var a=arguments.length,i=new Array(a),r=0;r<a;r++)i[r]=arguments[r];return(n=Object(v.a)(this,(e=Object(g.a)(t)).call.apply(e,[this].concat(i)))).state={showAndroidDropdown:!1},n}return Object(y.a)(t,e),Object(f.a)(t,[{key:"componentDidMount",value:function(){s.b.pageview("/webview/overview")}},{key:"render",value:function(){return i.a.createElement("div",{className:"webview-overview"},i.a.createElement(te,null),i.a.createElement("h1",null,"Unity 3D WebView for Android, iOS, Windows, and macOS"),i.a.createElement("h2",{className:"asset-store-header"},"Buy on the Asset Store:"),i.a.createElement("div",{className:"store-links"},i.a.createElement("a",{href:P.productUrls.ANDROID_AND_IOS},i.a.createElement("img",{src:ae.a,alt:"Purchase Vuplex 3D WebView for Android and iOS on the Unity Asset Store"})),i.a.createElement("a",{href:P.productUrls.ANDROID,className:"android-option"},i.a.createElement("img",{src:re.a,alt:"Purchase Vuplex 3D WebView for Android on the Unity Asset Store"}),i.a.createElement("div",null,i.a.createElement("div",null,i.a.createElement("a",{href:P.productUrls.ANDROID},"For mobile"),i.a.createElement("a",{href:P.productUrls.ANDROID_GECKO},"For VR headsets")))),i.a.createElement("a",{href:P.productUrls.IOS},i.a.createElement("img",{src:se.a,alt:"Purchase Vuplex 3D WebView for iOS on the Unity Asset Store"})),i.a.createElement("a",{href:P.productUrls.WINDOWS_AND_MAC},i.a.createElement("img",{src:ce.a,alt:"Purchase Vuplex 3D WebView for Windows and macOS on the Unity Asset Store"}))),i.a.createElement("video",{src:me.a,autoPlay:!0,muted:!0,loop:!0,playsInline:!0}),i.a.createElement("p",{className:"description"},"Easily render and interact with web content in 3D using the same code that powers the ",i.a.createElement("a",{href:"https://vuplex.com"},"Vuplex VR/AR Browser"),"."),i.a.createElement("ul",null,i.a.createElement("li",null,"Load a webpage ",i.a.createElement(K,{to:"/webview/IWebView#LoadUrl"},"from a URL")," or ",i.a.createElement(K,{to:"/webview/IWebView#LoadHtml"},"HTML string")),i.a.createElement("li",null,"Watch videos and YouTube"),i.a.createElement("li",null,"Type with the included ",i.a.createElement(x.a,{to:"/webview/Keyboard"},"on-screen keyboard")),i.a.createElement("li",null,"Get started quickly using ",i.a.createElement(x.a,{to:"/webview/WebViewPrefab"},"WebViewPrefab"),", which automatically renders to a Texture2D and handles user interaction"),i.a.createElement("li",null,"C# source code for a ",i.a.createElement(x.a,{to:"/webview/IWebView"},"unified API")," that is the same for ",i.a.createElement("a",{href:P.productUrls.ANDROID},"Android"),", ",i.a.createElement("a",{href:P.productUrls.IOS},"iOS"),", ",i.a.createElement("a",{href:P.productUrls.WINDOWS_AND_MAC},"Windows"),", ",i.a.createElement("a",{href:P.productUrls.WINDOWS_AND_MAC},"macOS"),", and ",i.a.createElement("a",{href:P.productUrls.UWP},"UWP / Hololens")),i.a.createElement("li",null,"Powered by ",i.a.createElement("a",{href:"https://en.wikipedia.org/wiki/Chromium_(web_browser)"},"Chromium")," on Windows and macOS (currently v78.0) and by the system webview on other platforms"),i.a.createElement("li",null,"Dispatch ",i.a.createElement(K,{to:"/webview/IWebView#HandleKeyboardInput"},"keyboard")," and ",i.a.createElement(K,{to:"/webview/IWebView#Click"},"mouse")," events, ",i.a.createElement(K,{to:"/webview/WebViewPrefab#Resize"},"resize"),", ",i.a.createElement(K,{to:"/webview/IWebView#ZoomIn"},"zoom"),", ",i.a.createElement(K,{to:"/webview/IWebView#Scroll"},"scroll"),", and go ",i.a.createElement(K,{to:"/webview/IWebView#GoBack"},"back")," / ",i.a.createElement(K,{to:"/webview/IWebView#GoForward"},"forward")," programmatically"),i.a.createElement("li",null,i.a.createElement(K,{to:"/webview/IWebView#ExecuteJavaScript"},"Execute JavaScript")," in the context of the current page"),i.a.createElement("li",null,"Send messages from ",i.a.createElement(K,{to:"/webview/IWebView#PostMessage"}," C# to JavaScript")," and ",i.a.createElement(K,{to:"/webview/IWebView#MessageEmitted"},"vice versa")),i.a.createElement("li",null,"Listen for browser events like ",i.a.createElement(K,{to:"/webview/IWebView#TitleChanged"},"TitleChanged"),", ",i.a.createElement(K,{to:"/webview/IWebView#UrlChanged"},"UrlChanged"),", and ",i.a.createElement(K,{to:"/webview/IWebView#PageLoadFailed"},"PageLoadFailed")),i.a.createElement("li",null,"View PDFs"),i.a.createElement("li",null,"Supports both world space and Canvas")),i.a.createElement("h2",{id:"examples"},"Examples"),i.a.createElement("ul",null,i.a.createElement("li",null,i.a.createElement("a",{href:"https://github.com/vuplex/oculus-webview-example",target:"_blank",rel:"noopener"},"Oculus example")," (Oculus Quest, Oculus Go, Gear VR)"),i.a.createElement("li",null,i.a.createElement("a",{href:"https://github.com/vuplex/google-vr-webview-example",target:"_blank",rel:"noopener"},"Google VR example")," (Cardboard, Daydream)"),i.a.createElement("li",null,i.a.createElement("a",{href:"https://github.com/vuplex/ar-foundation-webview-example",target:"_blank",rel:"noopener"},"AR Foundation example")),i.a.createElement("li",null,i.a.createElement("a",{href:"https://github.com/vuplex/hololens-webview-example",target:"_blank",rel:"noopener"},"Hololens example")),i.a.createElement("li",null,"3D WebView also includes these demo scenes:",i.a.createElement("ul",null,i.a.createElement("li",null,"SimpleWebViewDemo"),i.a.createElement("li",null,"CanvasWebViewDemo"),i.a.createElement("li",null,"AdvancedWebViewDemo")))),i.a.createElement("h2",{id:"featured-customers"},"Featured Customers"),i.a.createElement(Ae,null),i.a.createElement("h2",null,"System requirements"),i.a.createElement("ul",null,i.a.createElement("li",null,"Android 5.0+ (armv7, arm64, x86) with OpenGL graphics"),i.a.createElement("li",null,"iOS 10+, supports both Metal and OpenGL"),i.a.createElement("li",null,"Windows 8+ (x64, x86) with D3D11 graphics"),i.a.createElement("li",null,"macOS 10.10+ (x64) with Metal graphics"),i.a.createElement("li",null,"Universal Windows Platform on Windows 10 (x64, x86, ARM, ARM64) with D3D11 graphics"),i.a.createElement("li",null,"Unity 5.6+ (except versions 2017.3 - 2018.1 are unsupported on Windows due to a Unity bug)")),i.a.createElement("h2",{id:"important-notes"},"Important notes"),i.a.createElement("ul",null,i.a.createElement("li",null,"3D WebView's native plugins are provided as precompiled libraries, and the native source code for them is not included."),i.a.createElement("li",null,"3D WebView's native Android, iOS, and UWP plugins can't run in the editor, so a mock webview implementation is used by default while running in the editor. However, you can actually load and render web content in the editor by also purchasing ",i.a.createElement("a",{href:P.productUrls.WINDOWS_AND_MAC},"3D WebView for Windows and macOS"),"."),i.a.createElement("li",null,"Licensed primarily under the ",i.a.createElement("a",{href:"https://vuplex.com/commercial-library-license"},"Vuplex Commercial Library License"),", with additional licenses for the following open source libraries:",i.a.createElement("ul",null,i.a.createElement("li",null,i.a.createElement("a",{href:P.productUrls.ANDROID},"3D WebView for Android")," embeds PDF.js from Mozilla, so you must display a copy of its included ",i.a.createElement("a",{href:"https://github.com/mozilla/pdf.js/blob/9596d702a993bf3fc8a9a3694bf960ee0b83cbda/LICENSE"},"Apache 2.0 license")," in your Android app's about page or credits."),i.a.createElement("li",null,i.a.createElement("a",{href:P.productUrls.ANDROID_GECKO},"3D WebView for Android with Gecko Engine")," embeds an unmodified copy of Mozilla's ",i.a.createElement("a",{href:"https://hg.mozilla.org/mozilla-central/file/tip/mobile/android/geckoview"},"GeckoView library"),", so you must display a copy of its included ",i.a.createElement("a",{href:"https://www.mozilla.org/en-US/MPL/2.0/"},"Mozilla Public License")," in your Android app's about page or credits."),i.a.createElement("li",null,i.a.createElement("a",{href:P.productUrls.WINDOWS_AND_MAC},"3D WebView for Windows and macOS")," embeds Chromium Embedded Framework, so you must display a copy of its included ",i.a.createElement("a",{href:"https://bitbucket.org/chromiumembedded/cef/src/5c1f3e4ffa3c69d1f2dc6b52fa74e81f01dad692/LICENSE.txt?at=master"},"BSD-style license")," in your desktop app's about page or credits."))),i.a.createElement("li",null,"Android limitation: The Android plugins use OES textures, which don't work correctly with the Universal Render Pipeline."),i.a.createElement("li",null,"iOS limitations:",i.a.createElement("ul",null,i.a.createElement("li",null,"Regular HTML5 video tags and videos on popular sites like YouTube, Vimeo, and Facebook work well, but some 3rd-party JS video widgets do not function as expected. To determine whether a specific site or video widget is compatible, try it first in the ",i.a.createElement("a",{href:"https://vuplex.com"},"Vuplex VR Browser app"),"."),i.a.createElement("li",null,"The web rendering frame rate of the iOS plugin is relatively slow (<10 FPS) due to iOS limitations. The exception to this is video, which is rendered at a high frame rate."))),i.a.createElement("li",null,"Windows and macOS limitations:",i.a.createElement("ul",null,i.a.createElement("li",null,"By default, Chromium doesn't support patent-encumbered video codecs like H.264 or MP4. For now, a workaround is to use an open video format, like WebM, or a site that supports those formats, like YouTube."),i.a.createElement("li",null,"Building for the Mac App Store is not supported."))),i.a.createElement("li",null,"Universal Windows Platform (UWP) limitations:",i.a.createElement("ul",null,i.a.createElement("li",null,"The project's ",i.a.createElement("em",null,"Build Type")," must be set to ",i.a.createElement("em",null,"XAML Project"),"."),i.a.createElement("li",null,"Currently, when a text input is focused on Hololens, no blinking text caret appears. However, the text caret appears when running on desktop."),i.a.createElement("li",null,"The web rendering frame rate of the UWP plugin is relatively slow (<10 FPS) due to UWP limitations."))),i.a.createElement("li",null,i.a.createElement("a",{href:"https://vuplex.com/contact"},"Contact me")," if you have questions!")))}}]),t}(a.Component)),Oe=n(119),Ue=n.n(Oe),De=(n(411),function(e){function t(){return Object(w.a)(this,t),Object(v.a)(this,Object(g.a)(t).apply(this,arguments))}return Object(y.a)(t,e),Object(f.a)(t,[{key:"componentDidMount",value:function(){s.b.pageview("/webview/getting-started")}},{key:"render",value:function(){return i.a.createElement("div",{className:"page getting-started"},i.a.createElement(X.a,null,i.a.createElement("title",null,"Getting Started | 3D WebView"),i.a.createElement("meta",{name:"description",content:"How to get started with Vuplex 3D WebView for Unity."})),i.a.createElement("h1",null,"Getting started"),i.a.createElement("ol",null,i.a.createElement("li",null,"Purchase and import 3D WebView for one or more platforms:",i.a.createElement("ul",null,i.a.createElement("li",null,i.a.createElement("a",{href:P.productUrls.ANDROID},"Android mobile")),i.a.createElement("li",null,i.a.createElement("a",{href:P.productUrls.ANDROID_GECKO},"Android VR headset")," (",i.a.createElement(x.a,{to:"/webview/android-comparison"},"comparison"),")"),i.a.createElement("li",null,i.a.createElement("a",{href:P.productUrls.IOS},"iOS")),i.a.createElement("li",null,i.a.createElement("a",{href:P.productUrls.WINDOWS_AND_MAC},"Windows and macOS")),i.a.createElement("li",null,i.a.createElement("a",{href:P.productUrls.UWP},"Universal Windows Platform (UWP)")))),i.a.createElement("li",null,"Add 3D WebView's SimpleWebViewDemo scene to your build"),i.a.createElement("li",null,i.a.createElement("strong",null,"Android settings:"),i.a.createElement("ol",{type:"a"},i.a.createElement("li",null,'Set "Graphics API" to "OpenGLES3" or "OpenGLES2"'),i.a.createElement("li",null,'Set "Minimum API Level" to "Android 5.0 Lollipop"'),i.a.createElement("li",null,'Set "Internet Access" to "Require"'),i.a.createElement("li",null,'Verify that the "Build System" is set to "Gradle" (default)'))),i.a.createElement("li",null,i.a.createElement("strong",null,"iOS settings:"),i.a.createElement("ol",{type:"a"},i.a.createElement("li",null,"No changes to the Unity player settings are required"),i.a.createElement("li",null,'Once Unity generates your Xcode project, verify that "Enable Bitcode" is set to "No" in ',i.a.createElement("em",null,"Build Settings"),'. If you\'re using Unity 2019.3 or newer, you must do this for the target named "UnityFramework". For older versions, do this for the target named "Unity-iPhone".',i.a.createElement("img",{src:Ue.a,alt:"location of bitcode settings in Xcode"})))),i.a.createElement("li",null,i.a.createElement("strong",null,"Windows settings:"),i.a.createElement("ol",{type:"a"},i.a.createElement("li",null,'Set "Graphics APIs for Windows" to "Direct3D11"'))),i.a.createElement("li",null,i.a.createElement("strong",null,"macOS settings:"),i.a.createElement("ol",{type:"a"},i.a.createElement("li",null,'Set "Graphics APIs for Mac" to "Metal"'),i.a.createElement("li",null,'Verify that "Metal Editor Support" is enabled'))),i.a.createElement("li",null,i.a.createElement("strong",null,"Universal Windows Platform (UWP) settings:"),i.a.createElement("ol",{type:"a"},i.a.createElement("li",null,'Set "Build Type" to "XAML Project" (this is required to support webviews)'),i.a.createElement("li",null,'Disable "Auto Graphics API"'),i.a.createElement("li",null,'Set "Graphics APIs" to "Direct3D11"'),i.a.createElement("li",null,'If targeting Hololens 2, disable "Graphics Jobs"'),i.a.createElement("li",null,'In "Publishing Settings", enable the following capabilities: "InternetClient", "SpatialPerception"'),i.a.createElement("li",null,'If XR is enabled, set "Stereo Rendering Mode" to "Multi-Pass" (Single-Pass is not currently supported)'),i.a.createElement("li",null,"(optional) If using ",i.a.createElement("a",{href:"https://github.com/microsoft/MixedRealityToolkit-Unity"},"Mixed Reality Toolkit (MRTK)"),', add the following symbol to "Scripting Define Symbols" to enable MRTK pointer compatibility: ',i.a.createElement("code",null,"VUPLEX_MRTK")))),i.a.createElement("li",null,"Now you can run the SimpleWebViewDemo scene in the editor or build it and deploy it to your device"),i.a.createElement("li",null,"Next, check out the docs for ",i.a.createElement(x.a,{to:"/webview/WebViewPrefab"},"WebViewPrefab")," and ",i.a.createElement(x.a,{to:"/webview/IWebView"},"IWebView")," for more details on loading and interacting with web content")),i.a.createElement("h2",null,"Examples"),i.a.createElement("ul",null,i.a.createElement("li",null,i.a.createElement("a",{href:"https://github.com/vuplex/oculus-webview-example"},"Oculus example")," (Oculus Quest, Oculus Go, and Gear VR)"),i.a.createElement("li",null,i.a.createElement("a",{href:"https://github.com/vuplex/google-vr-webview-example"},"Google VR example")," (Cardboard and Daydream)"),i.a.createElement("li",null,i.a.createElement("a",{href:"https://github.com/vuplex/ar-foundation-webview-example"},"AR Foundation example")),i.a.createElement("li",null,i.a.createElement("a",{href:"https://github.com/vuplex/hololens-webview-example"},"Hololens example")),i.a.createElement("li",null,"3D WebView also includes these demo scenes:",i.a.createElement("ul",null,i.a.createElement("li",null,"SimpleWebViewDemo"),i.a.createElement("li",null,"CanvasWebViewDemo"),i.a.createElement("li",null,"AdvancedWebViewDemo")))))}}]),t}(a.Component)),Pe=n(43),Re=n.n(Pe),Le=n(29),_e=n.n(Le);function Ne(e){var t=e.name;if(e.returns&&(t="".concat(e.returns," ").concat(t)),"method"===e.type){var n=e.arguments?e.arguments.map(function(e){return"".concat(e.type," ").concat(e.name)}).join(", "):"";t+="(".concat(n,")")}return e.static&&(t="static "+t),t}n(539);var Me=function(e){function t(){var e,n;Object(w.a)(this,t);for(var a=arguments.length,r=new Array(a),o=0;o<a;o++)r[o]=arguments[o];return(n=Object(v.a)(this,(e=Object(g.a)(t)).call.apply(e,[this].concat(r))))._renderMember=function(e){return i.a.createElement("div",{key:e.name+JSON.stringify(e.arguments)},i.a.createElement("h3",{id:e.name},e.name),n._renderFullName(e),n._renderDescription(e))},n}return Object(y.a)(t,e),Object(f.a)(t,[{key:"render",value:function(){return i.a.createElement("div",{className:"member-section"},i.a.createElement("h2",null,this.props.title),this.props.members.map(this._renderMember))}},{key:"_renderDescription",value:function(e){var t=e.description;return"string"===typeof t?i.a.createElement(Re.a,{className:"description",source:t}):i.a.createElement("div",{className:"description"},t)}},{key:"_renderFullName",value:function(e){var t=this,n=Ne(e).split(" ").filter(function(e){return!!e}).reduce(function(e,n,a){a&&e.push(" ");var r=n.replace("[]","");if(t.props.fileReferenceDefinitions.find(function(e){return e.name===r}))e.push(i.a.createElement(x.a,{key:n,to:"/webview/".concat(r)},n));else{var o=n.split(/[<>]/),s=null,l=!0,c=!1,d=void 0;try{for(var m,u=function(){var e=m.value,n=t.props.fileReferenceDefinitions.find(function(t){return t.name===e});if(n)return s=n,"break"},p=o[Symbol.iterator]();!(l=(m=p.next()).done);l=!0){if("break"===u())break}}catch(f){c=!0,d=f}finally{try{l||null==p.return||p.return()}finally{if(c)throw d}}if(s){var h=s.name,b=n.split(h),w=i.a.createElement(x.a,{key:h,to:"/webview/".concat(h)},h);b.splice(1,0,w),e.push.apply(e,Object(ue.a)(b))}else e.push(n)}return e},[]);return i.a.createElement("code",{className:"full-name"},n)}}]),t}(a.Component),ze=(n(541),function(e){function t(){var e,n;Object(w.a)(this,t);for(var a=arguments.length,r=new Array(a),o=0;o<a;o++)r[o]=arguments[o];return(n=Object(v.a)(this,(e=Object(g.a)(t)).call.apply(e,[this].concat(r))))._renderMember=function(e){return"value"===e.type?i.a.createElement("div",{key:e.name+JSON.stringify(e.arguments)},Ne(e)):i.a.createElement("div",{key:e.name+JSON.stringify(e.arguments)},i.a.createElement(K,{to:"#".concat(e.name),behavior:"smooth"},Ne(e)))},n}return Object(y.a)(t,e),Object(f.a)(t,[{key:"render",value:function(){return i.a.createElement("div",{className:"member-table"},i.a.createElement("h3",null,this.props.title),this.props.members.map(this._renderMember))}}]),t}(a.Component));n(543);m.a.configure({languages:["javascript","cs"]});var Ge=function(e){function t(){var e,n;Object(w.a)(this,t);for(var a=arguments.length,i=new Array(a),r=0;r<a;r++)i[r]=arguments[r];return(n=Object(v.a)(this,(e=Object(g.a)(t)).call.apply(e,[this].concat(i))))._saveRef=function(e){return n._componentElement=e},n}return Object(y.a)(t,e),Object(f.a)(t,[{key:"componentDidMount",value:function(){this._highlightCode(),s.b.pageview("/webview/".concat(this.props.name))}},{key:"componentDidUpdate",value:function(){this._highlightCode()}},{key:"render",value:function(){var e=this.props.members||[],t=_e()(e.filter(function(e){return"event"===e.type}),"name"),n=_e()(e.filter(function(e){return"method"===e.type}),"name"),a=_e()(e.filter(function(e){return"property"===e.type}),"name"),r=_e()(e.filter(function(e){return"value"===e.type}),"name"),o=this.props.plainTextDescription||("string"===typeof this.props.description?function(e,t){(t=t||{}).listUnicodeChar=!!t.hasOwnProperty("listUnicodeChar")&&t.listUnicodeChar,t.stripListLeaders=!t.hasOwnProperty("stripListLeaders")||t.stripListLeaders,t.gfm=!t.hasOwnProperty("gfm")||t.gfm,t.useImgAltText=!t.hasOwnProperty("useImgAltText")||t.useImgAltText;var n=e||"";n=n.replace(/^(-\s*?|\*\s*?|_\s*?){3,}\s*$/gm,"");try{t.stripListLeaders&&(n=t.listUnicodeChar?n.replace(/^([\s\t]*)([\*\-\+]|\d+\.)\s+/gm,t.listUnicodeChar+" $1"):n.replace(/^([\s\t]*)([\*\-\+]|\d+\.)\s+/gm,"$1")),t.gfm&&(n=n.replace(/\n={2,}/g,"\n").replace(/~{3}.*\n/g,"").replace(/~~/g,"").replace(/`{3}.*\n/g,"")),n=n.replace(/<[^>]*>/g,"").replace(/^[=\-]{2,}\s*$/g,"").replace(/\[\^.+?\](\: .*?$)?/g,"").replace(/\s{0,2}\[.*?\]: .*?$/g,"").replace(/\!\[(.*?)\][\[\(].*?[\]\)]/g,t.useImgAltText?"$1":"").replace(/\[(.*?)\][\[\(].*?[\]\)]/g,"$1").replace(/^\s{0,3}>\s?/g,"").replace(/^\s{1,2}\[(.*?)\]: (\S+)( ".*?")?\s*$/g,"").replace(/^(\n)?\s{0,}#{1,6}\s+| {0,}(\n)?\s{0,}#{0,} {0,}(\n)?\s{0,}$/gm,"$1$2$3").replace(/([\*_]{1,3})(\S.*?\S{0,1})\1/g,"$2").replace(/([\*_]{1,3})(\S.*?\S{0,1})\1/g,"$2").replace(/(`{3,})(.*?)\1/gm,"$2").replace(/`(.+?)`/g,"$1").replace(/\n{2,}/g,"\n\n")}catch(a){return console.error(a),e}return n}(this.props.description):"3D WebView documentation for ".concat(this.props.name));return i.a.createElement("div",{className:"file-reference",ref:this._saveRef},i.a.createElement(X.a,null,i.a.createElement("title",null,this.props.name," | 3D WebView Documentation"),i.a.createElement("meta",{name:"description",content:o})),i.a.createElement("div",null,i.a.createElement("h1",null,this.props.name),i.a.createElement("h2",null,this.props.static?"static ":"",this.props.type,this._renderBaseClasses())),this._renderDescription(),i.a.createElement("section",{className:"member-summary"},i.a.createElement("h2",null,"Summary"),!!a.length&&i.a.createElement(ze,{title:"Public properties",members:a}),!!n.length&&i.a.createElement(ze,{title:"Public methods",members:n}),!!t.length&&i.a.createElement(ze,{title:"Public events",members:t}),!!r.length&&i.a.createElement(ze,{title:"Values",members:r})),!!a.length&&i.a.createElement(Me,{title:"Public properties",members:a,fileReferenceDefinitions:this.props.fileReferenceDefinitions}),!!n.length&&i.a.createElement(Me,{title:"Public methods",members:n,fileReferenceDefinitions:this.props.fileReferenceDefinitions}),!!t.length&&i.a.createElement(Me,{title:"Public events",members:t,fileReferenceDefinitions:this.props.fileReferenceDefinitions}))}},{key:"_highlightCode",value:function(){for(var e=this._componentElement.querySelectorAll("pre code"),t=0;t<e.length;t++)m.a.highlightBlock(e[t])}},{key:"_renderBaseClasses",value:function(){var e=this,t=this.props.inheritsFrom;if(t&&t.length){var n=("string"===typeof this.props.inheritsFrom?[t]:t).reduce(function(t,n,a){return a&&t.push(", "),e.props.fileReferenceDefinitions.find(function(e){return e.name===n})?t.push(i.a.createElement(x.a,{key:n,to:"/webview/".concat(n)},n)):t.push(n),t},[]);return i.a.createElement("span",null," : ",n)}}},{key:"_renderDescription",value:function(){var e=this.props.description;return"string"===typeof e?i.a.createElement(Re.a,{source:e}):e}}]),t}(a.Component),je=n(560),Fe=function(e){function t(){return Object(w.a)(this,t),Object(v.a)(this,Object(g.a)(t).apply(this,arguments))}return Object(y.a)(t,e),Object(f.a)(t,[{key:"componentDidUpdate",value:function(e){this.props.location!==e.location&&window.scrollTo(0,0)}},{key:"render",value:function(){return null}}]),t}(a.Component),He=Object(je.a)(Fe),Be=(n(546),function(){return i.a.createElement(E.a,{to:"/webview/overview"})}),Je=function(e){function t(){var e,n;Object(w.a)(this,t);for(var a=arguments.length,r=new Array(a),o=0;o<a;o++)r[o]=arguments[o];return(n=Object(v.a)(this,(e=Object(g.a)(t)).call.apply(e,[this].concat(r)))).state={mobileSidebarOpen:!1},n._handleMenuClick=function(){return n.setState({mobileSidebarOpen:!n.state.mobileSidebarOpen})},n._handleSidebarLinkClick=function(){n.state.mobileSidebarOpen&&n.setState({mobileSidebarOpen:!1})},n._renderFileReference=function(e){return i.a.createElement("li",{key:e.name},i.a.createElement(x.a,{to:"/webview/".concat(e.name),onClick:n._handleSidebarLinkClick},e.name))},n._renderFileReferenceRoute=function(e){return i.a.createElement(k.a,{key:e.name,exact:!0,path:"/webview/".concat(e.name),render:function(t){return i.a.createElement(Ge,Object.assign({fileReferenceDefinitions:Q},t,e))}})},n}return Object(y.a)(t,e),Object(f.a)(t,[{key:"render",value:function(){var e=Q.filter(function(e){return"core"===e.sidebarSection}),t=Q.filter(function(e){return"platform"===e.sidebarSection});return i.a.createElement("div",{className:"app"},i.a.createElement(He,null),i.a.createElement(te,null),i.a.createElement(U,{site:"developers",className:"developers-navbar",mobileMenuButton:{onClick:this._handleMenuClick,menuOpen:this.state.mobileSidebarOpen},search:!0}),i.a.createElement("div",{className:"app-container"},i.a.createElement(D,{mobileSidebarOpen:this.state.mobileSidebarOpen,onMobileBackdropClick:this._handleMenuClick},i.a.createElement(x.a,{to:"/webview/overview",onClick:this._handleSidebarLinkClick},"Overview"),i.a.createElement(x.a,{to:"/webview/getting-started",onClick:this._handleSidebarLinkClick},"Getting started"),i.a.createElement("a",{href:"https://blog.vuplex.com/debugging-webviews",onClick:this._handleSidebarLinkClick},"Debugging web content"),i.a.createElement("div",null,i.a.createElement("h2",null,"Class reference"),i.a.createElement("ul",{className:"file-section-list"},i.a.createElement("li",null,i.a.createElement("h3",null,"Core classes:"),i.a.createElement("ul",null,e.map(this._renderFileReference))),i.a.createElement("li",null,i.a.createElement("h3",null,"Platform-specific:"),i.a.createElement("ul",null,t.map(this._renderFileReference))))),i.a.createElement("a",{href:"https://vuplex.com/contact",className:"mobile-only",onClick:this._handleSidebarLinkClick},"Contact")),i.a.createElement("div",{className:"page-container"},i.a.createElement(W.a,null,i.a.createElement(k.a,{exact:!0,path:"/",component:Be}),i.a.createElement(k.a,{exact:!0,path:"/webview",component:Be}),i.a.createElement(k.a,{exact:!0,path:"/webview/android-comparison",component:ee}),i.a.createElement(k.a,{exact:!0,path:"/webview/getting-started",component:De}),i.a.createElement(k.a,{exact:!0,path:"/webview/overview",component:Te}),Q.map(this._renderFileReferenceRoute)))))}}]),t}(a.Component);Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));n(548),n(550);s.b.initialize("UA-115535860-5");var Ke=i.a.createElement(o.a,null,i.a.createElement(Je,null));Object(r.render)(Ke,document.getElementById("root")),c.a.polyfill(),m.a.registerLanguage("javascript",p.a),m.a.registerLanguage("cs",b.a),m.a.initHighlightingOnLoad(),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},70:function(e,t,n){e.exports=n.p+"static/media/caret-down.bf829718.svg"}},[[121,2,1]]]);